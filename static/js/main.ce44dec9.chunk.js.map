{"version":3,"sources":["pages/rating/ChartSection.tsx","components/NavigationBar.tsx","pages/rating/FormBlock.tsx","utils/index.ts","utils/BinaryIndexedTree.ts","utils/Rating.ts","pages/rating/UserInfoTable.tsx","utils/Data.ts","utils/Shape.ts","pages/rating/StatusCanvas.ts","pages/rating/RatingDistributionChartCanvas.ts","pages/rating/RatingDistributionGraph.tsx","pages/rating/ChartCanvas.ts","pages/rating/RatingGraph.tsx","pages/rating/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ChartTab","NavigationBar","Navbar","color","light","expand","fixed","NavbarBrand","tag","Link","to","FormBlock","props","paramUser","useState","user","setUser","ratingPagePath","useMemo","generatePath","history","useHistory","Row","Col","sm","FormGroup","style","width","Label","for","Input","value","type","name","id","placeholder","onChange","e","target","onKeyPress","key","push","Button","NavLink","block","display","marginTop","getOrdinal","x","s","v","formatDate","d","year","String","getFullYear","month","getMonth","slice","date","getDate","getPer","l","r","BinaryIndexedTree","_length","data","length","this","Array","fill","k","ret","sum","COLORS","getColor","i","RatingRanks","contestResultsArray","bit","user2rating","user2ratingRankHistory","ratings","Map","undefined","forEach","contestResults","username","has","set","Math","max","get","NewRating","add","OldRating","rating","rank","query","from","values","sort","a","b","ratingAndRank","xaxis","index","findIndex","pop","UserInfoTable","ratingHistory","ratingRanks","lastResult","lastCompeted","Date","EndTime","getRank","ratingColor","fontSize","className","CONTESTS","fetchContests","fetch","process","catch","Error","then","json","Promise","resolve","CONTEST_RESULTS_MAP","fetchContestResults","contest","startsWith","submissions","newGraphics","parent","PIXI","addChild","newText","y","font","t","fontFamily","anchor","LABEL_FONT_FAMILY","RATING_FONT_FAMILY","OFFSET_X","STATUS_WIDTH","STATUS_HEIGHT","Particle","statusContainer","object","angle","speed","velocityX","velocityY","rotateSpeed","life","initialX","initialY","alpha","useStar","random","PI","cos","sin","visible","text","scale","rotation","Particles","particles","num","particle","disable","update","StatusCanvas","app","borderGraphics","ratingText","placeText","diffText","dateText","contestNameText","standingsUrl","ticker","maxFPS","animate","destroy","children","texture","baseTexture","stage","OFFSET_Y","interactive","cursor","on","window","location","href","particle_flag","old_rating","place","Place","contest_name","ContestName","tmp","clear","lineStyle","drawRoundedRect","abs","toLocaleDateString","particleNum","floor","pow","pre","getRatingPer","StandingsUrl","PANEL_WIDTH","PANEL_HEIGHT","RatingDistributionChartCanvas","chartContainer","chartGraphics","labelTextStyle","n","yMax","lineGraphics","reduce","prev","curr","initBackground","initChart","panelGraphics","newLabelY","newLabelX","moveTo","lineTo","dropShadowFilter","DropShadowFilter","distance","hypot","atan2","blur","filters","countText","countGraphics","histogramGraphics","rectHeight","x0","x1","beginFill","drawRect","hitAreaRect","hitArea","mouseover","initUserRatingLine","col","per","getXandColor","RatingDistributionGraph","isFontListLoaded","useFontFaceObserver","family","chartCanvasRef","useRef","canvas","setCanvas","useEffect","chartCanvas","current","_chartApp","height","view","antialias","renderer","backgroundColor","_chartCanvas","init","margin","maxWidth","maxHeight","ref","MARGIN_VAL_X","MONTH_NAMES","ChartCanvas","x_min","x_max","y_min","y_max","R","statusCanvas","ratingHistoryEntry","min","y1","y2","endFill","month_step","isFirst","isEnded","j","unix","parse","statusGraphics","highestGraphics","mouseoverVertex","vertexGraphics","mouseoutVertex","highestIdx","argmax","maxRating","map","vertex","drawCircle","dx","HIGHEST_WIDTH","HIGHEST_HEIGHT","highest_text","RatingGraph","statusCanvasRef","canvases","setCanvases","_statusApp","_statusCanvas","lastHistory","ChartWrapper","ChartSection","activeTab","setActiveTab","tweetTitle","setTweetTitle","_tweetTitle","getHistogram","getRating","ButtonGroup","size","onClick","active","ratingDistribution","textAlign","TwitterShareButton","url","title","TwitterIcon","round","UncontrolledTooltip","placement","replaceAll","RatingPage","match","params","useSWR","contests","contestsError","error","promises","slug","all","contestResultsArrayError","filter","contestResult","Alert","marginBottom","marginLeft","marginRight","App","revalidateOnFocus","Container","exact","path","component","padding","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce44dec9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Button, ButtonGroup, UncontrolledTooltip } from 'reactstrap';\nimport { TwitterIcon, TwitterShareButton } from 'react-share';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport { RatingRanks } from '../../utils/Rating';\nimport { RatingDistributionGraph } from './RatingDistributionGraph';\nimport { RatingGraph } from './RatingGraph';\nimport { getOrdinal } from '../../utils';\n\ninterface Props {\n  paramUser: string;\n  ratingHistory?: RatingHistoryEntry[];\n  ratingRanks: RatingRanks;\n}\n\nenum ChartTab {\n  'rating' = 0,\n  'ratingDistribution' = 1,\n}\n\nconst ChartWrapper: React.FC<{\n  display: boolean;\n}> = (props) => <>{props.display ? props.children : <></>}</>;\n\nexport const ChartSection: React.FC<Props> = (props) => {\n  const { paramUser, ratingHistory, ratingRanks } = props;\n\n  const [activeTab, setActiveTab] = useState<ChartTab>(ChartTab.rating);\n  const [tweetTitle, setTweetTitle] = useState('');\n\n  useEffect(() => {\n    if (!ratingHistory) return;\n    const lastHistory = ratingHistory[ratingHistory.length - 1];\n    const rank = lastHistory.Place;\n    const _tweetTitle =\n      `${paramUser} took ${getOrdinal(rank)} place in ${\n        lastHistory.ContestName\n      }!\\n` + `AtCoder Marathon Rating History`;\n    setTweetTitle(_tweetTitle);\n  }, [paramUser, ratingHistory]);\n\n  const [xaxis, data] = ratingRanks.getHistogram();\n  const rating = ratingRanks.getRating(paramUser);\n\n  return (\n    <>\n      <div style={{ marginTop: '20px' }}>\n        <ButtonGroup size=\"sm\" className=\"btn-group-ac-style\">\n          <Button\n            onClick={() => {\n              setActiveTab(ChartTab.rating);\n            }}\n            active={activeTab === ChartTab.rating}\n          >\n            Rating\n          </Button>\n          <Button\n            onClick={() => {\n              setActiveTab(ChartTab.ratingDistribution);\n            }}\n            active={activeTab === ChartTab.ratingDistribution}\n          >\n            Rating Distribution\n          </Button>\n        </ButtonGroup>\n      </div>\n\n      <div style={{ marginTop: '20px' }}>\n        <ChartWrapper display={activeTab === ChartTab.rating}>\n          <RatingGraph paramUser={paramUser} ratingHistory={ratingHistory} />\n        </ChartWrapper>\n        <ChartWrapper display={activeTab === ChartTab.ratingDistribution}>\n          <RatingDistributionGraph xaxis={xaxis} data={data} rating={rating} />\n        </ChartWrapper>\n      </div>\n      <div style={{ textAlign: 'center' }}>\n        <TwitterShareButton\n          url={window.location.href}\n          title={tweetTitle}\n          id=\"chart-share-button\"\n        >\n          <TwitterIcon size={40} round />\n        </TwitterShareButton>\n        <UncontrolledTooltip placement=\"top\" target=\"chart-share-button\">\n          {(tweetTitle + ' ' + window.location.href).replaceAll('\\n', ' ')}\n        </UncontrolledTooltip>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, NavbarBrand } from 'reactstrap';\n\nexport const NavigationBar: React.FC = () => {\n  return (\n    <Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n      <NavbarBrand tag={Link} to={'/'}>\n        AtCoder Marathon Rating History\n      </NavbarBrand>\n    </Navbar>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Button, Input, Row, FormGroup, Label, Col } from 'reactstrap';\n\ninterface Props {\n  paramUser: string;\n}\n\nconst generatePath = (user: string): string => `/rating/${user}`;\n\nexport const FormBlock: React.FC<Props> = (props) => {\n  const { paramUser } = props;\n  const [user, setUser] = useState(paramUser);\n  const ratingPagePath = useMemo(() => generatePath(user), [user]);\n  const history = useHistory();\n\n  return (\n    <>\n      <Row>\n        <Col sm={12}>\n          <FormGroup style={{ width: '100%' }}>\n            <Label for=\"input-user\">ATCODER ID:</Label>\n            <Input\n              value={user}\n              type=\"text\"\n              name=\"input-user\"\n              id=\"input-user\"\n              placeholder={user ? user : 'eivour'}\n              onChange={(e): void => setUser(e.target.value)}\n              onKeyPress={(e): void => {\n                if (e.key === 'Enter') {\n                  history.push(ratingPagePath);\n                }\n              }}\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={12}>\n          <Button\n            color=\"primary\"\n            tag={NavLink}\n            to={ratingPagePath}\n            block\n            style={{ display: 'block', marginTop: '0.5rem' }}\n          >\n            Go\n          </Button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","/**\n * 順位の数値から順位文字列に変換する\n * @param x 順位\n * @returns 順位文字列\n */\nexport const getOrdinal = (x: number): string => {\n  const s = ['th', 'st', 'nd', 'rd'];\n  const v = x % 100;\n  return `${x}${s[(v - 20) % 10] || s[v] || s[0]}`;\n};\n\nexport const formatDate = (d: Date): string => {\n  const year = String(d.getFullYear());\n  const month = `0${d.getMonth() + 1}`.slice(-2);\n  const date = `0${d.getDate()}`.slice(-2);\n  return `${year}/${month}/${date}`;\n};\n\nexport const getPer = (x: number, l: number, r: number): number => {\n  return (x - l) / (r - l);\n};\n","export class BinaryIndexedTree {\n  data: number[];\n  length: number;\n  constructor(_length: number) {\n    this.length = _length;\n    this.data = (Array(++_length) as number[]).fill(0);\n  }\n  sum(k: number): number {\n    let ret = 0;\n    for (++k; k > 0; k -= k & -k) ret += this.data[k];\n    return ret;\n  }\n  add(k: number, x: number): void {\n    for (++k; k < this.data.length; k += k & -k) this.data[k] += x;\n  }\n  // query for [l, r)\n  query(l: number, r: number): number {\n    return this.sum(r - 1) - this.sum(l - 1);\n  }\n}\n","import { BinaryIndexedTree } from './BinaryIndexedTree';\nimport { ContestResults } from './Data';\n\nexport const STEP_SIZE = 400;\nexport const COLORS: [number, string, number, number][] = [\n  [0, '#808080', 0.15, 0x808080],\n  [400, '#804000', 0.15, 0x804000],\n  [800, '#008000', 0.15, 0x008000],\n  [1200, '#00C0C0', 0.2, 0x00c0c0],\n  [1600, '#0000FF', 0.1, 0x0000ff],\n  [2000, '#C0C000', 0.25, 0xc0c000],\n  [2400, '#FF8000', 0.2, 0xff8000],\n  [2800, '#FF0000', 0.1, 0xff0000],\n];\n\n/**\n * レーティング x に関する色情報を返す\n * @param x レーティング\n * @returns [レーティング下限値，色文字列，アルファ値，色数値]\n */\nexport const getColor = (x: number): [number, string, number, number] => {\n  for (let i = COLORS.length - 1; i >= 0; i--) {\n    if (x >= COLORS[i][0]) return COLORS[i];\n  }\n  return [-1, '#000000', 0.1, 0x000000];\n};\n\n/**\n * 同色レーティング帯のうち何割の位置にいるかを求める\n * @param x レーティング値\n * @returns 割合\n */\nexport const getRatingPer = (x: number): number => {\n  let pre = COLORS[COLORS.length - 1][0] + STEP_SIZE;\n  for (let i = COLORS.length - 1; i >= 0; i--) {\n    if (x >= COLORS[i][0]) return (x - COLORS[i][0]) / (pre - COLORS[i][0]);\n    pre = COLORS[i][0];\n  }\n  return 0;\n};\n\nconst MAX_RATING = 10000;\nexport class RatingRanks {\n  bit: BinaryIndexedTree;\n  user2rating: Map<string, number>;\n  // userid => [rating, rank][]\n  user2ratingRankHistory: Map<string, [number, number][]>;\n  ratings: number[];\n\n  constructor(contestResultsArray?: (ContestResults | undefined)[]) {\n    this.bit = new BinaryIndexedTree(MAX_RATING);\n    this.user2rating = new Map<string, number>();\n    this.user2ratingRankHistory = new Map<string, [number, number][]>();\n    if (contestResultsArray === undefined) {\n      this.ratings = [];\n      return;\n    }\n    contestResultsArray.forEach((contestResults) => {\n      if (contestResults === undefined) return;\n\n      // レーティング更新の反映\n      for (const username in contestResults) {\n        if (this.user2rating.has(username)) {\n          this.user2rating.set(\n            username,\n            Math.max(\n              this.user2rating.get(username) as number,\n              contestResults[username].NewRating\n            )\n          );\n          this.bit.add(contestResults[username].OldRating, -1);\n          this.bit.add(contestResults[username].NewRating, 1);\n        } else {\n          this.user2rating.set(username, contestResults[username].NewRating);\n          this.bit.add(contestResults[username].NewRating, 1);\n        }\n      }\n\n      // ランキング更新\n      this.user2rating.forEach((rating: number, username: string) => {\n        const rank = this.bit.query(rating + 1, MAX_RATING) + 1;\n        if (this.user2ratingRankHistory.has(username)) {\n          this.user2ratingRankHistory.get(username)?.push([rating, rank]);\n        } else {\n          this.user2ratingRankHistory.set(username, [[rating, rank]]);\n        }\n      });\n    });\n    this.ratings = Array.from(this.user2rating.values());\n    this.ratings.sort((a, b) => b - a);\n  }\n\n  getRank(username: string): number {\n    const ratingAndRank = this.user2ratingRankHistory.get(username);\n    if (ratingAndRank === undefined) return -1;\n    return ratingAndRank[ratingAndRank.length - 1][1];\n  }\n\n  getRating(username: string): number {\n    return this.user2rating.get(username) ?? 0;\n  }\n\n  getHistogram(): [number[], number[]] {\n    const xaxis = [\n      0, 1, 2, 3, 4, 5, 7, 9, 12, 15, 19, 25, 32, 42, 54, 69, 89, 114, 147, 188,\n      242, 311, 400,\n    ];\n    // 400 以降は 100 区切りで 10000 まで追加しておく\n    for (let x = 500; x < 10000; x += 100) {\n      xaxis.push(x);\n    }\n    const data = Array(xaxis.length) as number[];\n    data.fill(0);\n\n    // 区切りごとに個数を数える\n    this.ratings.forEach((rating) => {\n      const index: number = xaxis.findIndex(\n        (x, i) => x <= rating && rating < xaxis[i + 1]\n      );\n      if (index === -1) return;\n      data[index]++;\n    });\n\n    // 0 要素を後ろから削る\n    while (data[data.length - 1] === 0) {\n      data.pop();\n      xaxis.pop();\n    }\n    return [xaxis, data];\n  }\n}\n","import React from 'react';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport { formatDate, getOrdinal } from '../../utils';\nimport { getColor, RatingRanks } from '../../utils/Rating';\n\ninterface Props {\n  paramUser: string;\n  ratingHistory: RatingHistoryEntry[];\n  ratingRanks: RatingRanks;\n}\n\nexport const UserInfoTable: React.FC<Props> = (props) => {\n  const { paramUser, ratingHistory, ratingRanks } = props;\n  if (ratingHistory.length === 0) {\n    return <></>;\n  }\n  const lastResult = ratingHistory[ratingHistory.length - 1];\n  const lastCompeted = new Date(lastResult.EndTime * 1000);\n  const rank = ratingRanks.getRank(paramUser);\n  const ratingColor = getColor(lastResult.NewRating)[1];\n\n  return (\n    <>\n      <h3 style={{ fontSize: '24px' }}>Contest Status</h3>\n      <hr />\n      <table className=\"dl-table\" style={{ fontSize: '14px' }}>\n        <tr>\n          <th className=\"no-break\">Name</th>\n          <td>{paramUser}</td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Rank</th>\n          <td>{getOrdinal(rank)}</td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Rating</th>\n          <td>\n            <span style={{ color: ratingColor }}>{lastResult.NewRating}</span>\n          </td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Rated Matches</th>\n          <td>{ratingHistory.length}</td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Last Competed</th>\n          <td>{formatDate(lastCompeted)}</td>\n        </tr>\n      </table>\n    </>\n  );\n};\n","import { Contest } from '../interfaces/Contest';\nimport { RatingHistoryEntry } from '../interfaces/RatingHistoryEntry';\n\nlet CONTESTS: Contest[] | undefined = undefined;\nexport const fetchContests = async (): Promise<Contest[]> =>\n  CONTESTS === undefined\n    ? fetch(`${process.env.PUBLIC_URL}/json/contests/contests.json`)\n        .catch((e) => {\n          throw Error(e);\n        })\n        .then(async (r) => {\n          CONTESTS = (await r.json()) as Contest[];\n          return CONTESTS;\n        })\n    : Promise.resolve(CONTESTS);\n\nexport type ContestResults = { [key: string]: RatingHistoryEntry };\nconst CONTEST_RESULTS_MAP: Map<string, ContestResults> = new Map<\n  string,\n  ContestResults\n>();\nexport const fetchContestResults = async (\n  contest?: string\n): Promise<ContestResults | undefined> =>\n  contest !== undefined && contest.length > 0 && contest.startsWith('ahc')\n    ? !CONTEST_RESULTS_MAP.has(contest)\n      ? fetch(`${process.env.PUBLIC_URL}/json/results/${contest}.json`)\n          .catch((e) => {\n            throw Error(e);\n          })\n          .then(async (r) => {\n            const submissions = (await r.json()) as ContestResults;\n            CONTEST_RESULTS_MAP.set(contest, submissions);\n            return submissions;\n          })\n      : Promise.resolve(CONTEST_RESULTS_MAP.get(contest) as ContestResults)\n    : Promise.resolve(undefined);\n","import * as PIXI from 'pixi.js';\n\nexport const newGraphics = (\n  parent: PIXI.Graphics | PIXI.Container\n): PIXI.Graphics => {\n  const s = new PIXI.Graphics();\n  parent.addChild(s);\n  return s;\n};\n\nexport const newText = (\n  parent: PIXI.Container,\n  x: number,\n  y: number,\n  font: string,\n  fontSize: number\n): PIXI.Text => {\n  const t = new PIXI.Text(\n    '',\n    new PIXI.TextStyle({\n      fontFamily: font,\n      fontSize: fontSize,\n      fill: 0x000000,\n    })\n  );\n  t.x = x;\n  t.y = y;\n  t.anchor.x = 0.5;\n  t.anchor.y = 0.5;\n  parent.addChild(t);\n  return t;\n};\n","import * as PIXI from 'pixi.js';\nimport { newGraphics, newText } from '../../utils/Shape';\nimport { getColor, getRatingPer } from '../../utils/Rating';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport { getOrdinal } from '../../utils';\n\nexport const LABEL_FONT_FAMILY = 'Lato';\nexport const RATING_FONT_FAMILY = 'Squada One';\n\nconst OFFSET_X = 50;\nconst OFFSET_Y = 5;\nconst STATUS_WIDTH = 640 - OFFSET_X - 10;\nconst STATUS_HEIGHT = 80 - OFFSET_Y - 5;\n\nconst STAR_MIN = 3200;\nconst PARTICLE_MIN = 3;\nconst PARTICLE_MAX = 20;\nconst LIFE_MAX = 30;\n\n/**\n * 増減値を文字列に変換する\n * @param x 増減値\n * @returns 増減値を表す文字列\n */\nconst getDiff = (x: number): string => {\n  const sign = x === 0 ? '±' : x < 0 ? '-' : '+';\n  return `${sign}${Math.abs(x)}`;\n};\n\nclass Particle {\n  object: PIXI.Text;\n  angle: number;\n  speed: number;\n  velocityX: number;\n  velocityY: number;\n  rotateSpeed: number;\n  life: number;\n  initialX: number;\n  initialY: number;\n\n  constructor(statusContainer: PIXI.Container, x: number, y: number) {\n    this.initialX = x;\n    this.initialY = y;\n    this.object = newText(statusContainer, 0, 0, LABEL_FONT_FAMILY, 64);\n    this.angle = 0;\n    this.speed = 0;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.rotateSpeed = 0;\n    this.life = 0;\n    this.object.x = this.initialX;\n    this.object.y = this.initialY;\n  }\n\n  set(color: number, alpha: number, useStar: boolean) {\n    this.object.x = this.initialX;\n    this.object.y = this.initialY;\n    this.angle = Math.random() * Math.PI * 2;\n    this.speed = Math.random() * 4 + 4;\n    this.velocityX = Math.cos(this.angle) * this.speed;\n    this.velocityY = Math.sin(this.angle) * this.speed;\n    this.rotateSpeed = Math.random() * 20 + 10;\n    this.life = LIFE_MAX;\n    this.object.visible = true;\n    this.object.style.fill = color;\n    this.object.text = useStar ? '★' : '@';\n    this.object.alpha = alpha;\n  }\n\n  disable() {\n    this.life = 0;\n    this.object.visible = false;\n  }\n\n  update() {\n    if (this.life <= 0) {\n      this.object.visible = false;\n      return;\n    }\n    this.object.x += this.velocityX;\n    this.velocityX *= 0.9;\n    this.object.y += this.velocityY;\n    this.velocityY *= 0.9;\n    this.life--;\n    this.object.scale.x = this.object.scale.y = this.life / LIFE_MAX;\n    this.object.rotation += this.rotateSpeed;\n  }\n}\n\nclass Particles {\n  particles: Particle[];\n\n  constructor(statusContainer: PIXI.Container, x: number, y: number) {\n    this.particles = [];\n    for (let i = 0; i < PARTICLE_MAX; ++i) {\n      this.particles.push(new Particle(statusContainer, x, y));\n    }\n  }\n\n  set(num: number, color: number, alpha: number, rating: number) {\n    const useStar = rating >= STAR_MIN;\n    this.particles.forEach((particle, index) => {\n      if (index < num) {\n        particle.set(color, alpha, useStar);\n      } else {\n        particle.disable();\n      }\n    });\n  }\n\n  update() {\n    this.particles.forEach((particle) => {\n      if (particle.life > 0) {\n        particle.update();\n      }\n    });\n  }\n}\n\nexport class StatusCanvas {\n  app: PIXI.Application;\n  statusContainer?: PIXI.Container;\n  borderGraphics!: PIXI.Graphics;\n  ratingText!: PIXI.Text;\n  placeText!: PIXI.Text;\n  diffText!: PIXI.Text;\n  dateText!: PIXI.Text;\n  contestNameText!: PIXI.Text;\n\n  particles?: Particles;\n  standingsUrl: string;\n\n  constructor(app: PIXI.Application) {\n    this.app = app;\n    this.statusContainer = undefined;\n    this.standingsUrl = '';\n\n    this.app.ticker.maxFPS = 60;\n    this.app.ticker.add(() => {\n      this.animate();\n    });\n  }\n\n  destroy(): void {\n    if (this.statusContainer) {\n      this.statusContainer.destroy({\n        children: true,\n        texture: true,\n        baseTexture: true,\n      });\n      this.statusContainer = undefined;\n    }\n  }\n\n  init(): void {\n    this.destroy();\n    this.statusContainer = new PIXI.Container();\n    void this.app.stage.addChild(this.statusContainer);\n\n    this.borderGraphics = newGraphics(this.statusContainer);\n    this.ratingText = newText(\n      this.statusContainer,\n      OFFSET_X + 75,\n      OFFSET_Y + STATUS_HEIGHT / 2,\n      RATING_FONT_FAMILY,\n      48\n    );\n    this.placeText = newText(\n      this.statusContainer,\n      OFFSET_X + 160,\n      OFFSET_Y + STATUS_HEIGHT / 2.7,\n      LABEL_FONT_FAMILY,\n      16\n    );\n    this.diffText = newText(\n      this.statusContainer,\n      OFFSET_X + 160,\n      OFFSET_Y + STATUS_HEIGHT / 1.5,\n      LABEL_FONT_FAMILY,\n      11\n    );\n    this.diffText.style.fill = 0x888888;\n    this.dateText = newText(\n      this.statusContainer,\n      OFFSET_X + 200,\n      OFFSET_Y + STATUS_HEIGHT / 4,\n      LABEL_FONT_FAMILY,\n      14\n    );\n    this.contestNameText = newText(\n      this.statusContainer,\n      OFFSET_X + 200,\n      OFFSET_Y + STATUS_HEIGHT / 1.6,\n      LABEL_FONT_FAMILY,\n      20\n    );\n    this.dateText.anchor.x = 0.0;\n    this.contestNameText.anchor.x = 0.0;\n    if (this.contestNameText.width > STATUS_WIDTH - 200 - 10) {\n      this.contestNameText.scale.x =\n        (STATUS_WIDTH - 200 - 10) / this.contestNameText.width;\n    }\n\n    this.contestNameText.interactive = true;\n    this.contestNameText.cursor = 'pointer';\n    this.contestNameText.on('click', () => {\n      window.location.href = this.standingsUrl;\n    });\n\n    this.particles = new Particles(\n      this.statusContainer,\n      this.ratingText.x,\n      this.ratingText.y\n    );\n  }\n\n  set(data: RatingHistoryEntry, particle_flag: boolean): void {\n    if (!this.particles) return;\n    const date = new Date(data.EndTime * 1000);\n    const rating = data.NewRating,\n      old_rating = data.OldRating;\n    const place = data.Place;\n    const contest_name = data.ContestName;\n    const tmp = getColor(rating);\n    const color = tmp[3],\n      alpha = tmp[2];\n    this.borderGraphics\n      .clear()\n      .lineStyle(1.0, color)\n      .drawRoundedRect(OFFSET_X, OFFSET_Y, STATUS_WIDTH, STATUS_HEIGHT, 2);\n    this.ratingText.text = String(rating);\n    this.ratingText.style.fill = color;\n    this.placeText.text = getOrdinal(place);\n    this.diffText.text = getDiff(rating - old_rating);\n    this.dateText.text = date.toLocaleDateString();\n    this.contestNameText.text = contest_name;\n    this.contestNameText.scale.x = 1.0;\n    if (this.contestNameText.width > STATUS_WIDTH - 200 - 10) {\n      this.contestNameText.scale.x =\n        (STATUS_WIDTH - 200 - 10) / this.contestNameText.width;\n    }\n    if (particle_flag) {\n      const particleNum = Math.floor(\n        Math.pow(getRatingPer(rating), 2) * (PARTICLE_MAX - PARTICLE_MIN) +\n          PARTICLE_MIN\n      );\n      this.particles.set(particleNum, color, alpha, rating);\n    }\n    this.standingsUrl = data.StandingsUrl;\n  }\n\n  animate(): void {\n    if (!this.particles) return;\n    this.particles.update();\n  }\n}\n","import * as PIXI from 'pixi.js';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { getPer } from '../../utils';\nimport { newGraphics } from '../../utils/Shape';\nimport { getColor } from '../../utils/Rating';\n\nconst OFFSET_X = 40;\nconst OFFSET_Y = 20;\nconst MARGIN_Y_PER = 1.1;\nconst STEP = 20;\nconst PANEL_WIDTH = 640 - OFFSET_X - 12;\nconst PANEL_HEIGHT = 480 - OFFSET_Y - 30;\n\n// additional\nconst LABEL_FONT_FAMILY = 'Lato';\n\nexport class RatingDistributionChartCanvas {\n  app: PIXI.Application;\n  chartContainer?: PIXI.Container;\n  chartGraphics?: PIXI.Graphics;\n  labelTextStyle!: PIXI.TextStyle;\n\n  n!: number;\n  xaxis!: number[];\n  data!: number[];\n  rating!: number;\n\n  yMax!: number;\n\n  lineGraphics?: PIXI.Graphics;\n  ratingText?: PIXI.Text;\n\n  constructor(app: PIXI.Application) {\n    this.app = app;\n    this.chartContainer = undefined;\n    // void this.init();\n  }\n\n  destroy(): void {\n    if (this.chartContainer) {\n      this.chartContainer.destroy({\n        children: true,\n        texture: true,\n        baseTexture: true,\n      });\n      this.chartContainer = undefined;\n    }\n  }\n\n  init(xaxis: number[], data: number[], rating: number): void {\n    this.destroy();\n    this.chartContainer = new PIXI.Container();\n    void this.app.stage.addChild(this.chartContainer);\n\n    if (data.length !== xaxis.length) {\n      throw new Error('長さ不一致');\n    }\n    this.xaxis = xaxis;\n    this.data = data;\n    this.rating = rating;\n\n    this.n = data.length;\n    if (this.n == 0) return;\n    this.xaxis.push(this.xaxis[this.n - 1] + 100);\n\n    this.yMax =\n      this.data.reduce((prev, curr) => Math.max(prev, curr), 0) * MARGIN_Y_PER;\n\n    this.labelTextStyle = new PIXI.TextStyle({\n      fontFamily: LABEL_FONT_FAMILY,\n      fontSize: 12,\n      fill: 0x000000,\n    });\n\n    void this.initBackground();\n    void this.initChart();\n  }\n\n  initBackground(): void {\n    if (this.chartContainer === undefined) return;\n\n    const panelGraphics = newGraphics(this.chartContainer);\n    panelGraphics.x = OFFSET_X;\n    panelGraphics.y = OFFSET_Y;\n    panelGraphics.alpha = 0.3;\n    const borderGraphics = newGraphics(this.chartContainer);\n    borderGraphics.x = OFFSET_X;\n    borderGraphics.y = OFFSET_Y;\n\n    const newLabelY = (s: string, y: number): PIXI.Text => {\n      const t = new PIXI.Text(s, this.labelTextStyle);\n      t.x = OFFSET_X - 10;\n      t.y = OFFSET_Y + y;\n      t.anchor.x = 1.0;\n      t.anchor.y = 0.5;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    const newLabelX = (s: string, x: number): PIXI.Text => {\n      const t = new PIXI.Text(\n        s,\n        new PIXI.TextStyle({\n          fontFamily: LABEL_FONT_FAMILY,\n          fontSize: 10,\n          fill: 0x000000,\n        })\n      );\n      t.x = OFFSET_X + x;\n      t.y = OFFSET_Y + PANEL_HEIGHT + 3;\n      t.anchor.x = 0.0;\n      t.anchor.y = 0.5;\n      t.angle = 90;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    // y 軸ラベルとグリッド線を追加する\n    borderGraphics.lineStyle(1.0, 0xdddddd);\n    for (let i = STEP; i < this.yMax; i += STEP) {\n      const y = PANEL_HEIGHT - PANEL_HEIGHT * getPer(i, 0, this.yMax);\n      borderGraphics.moveTo(0, y).lineTo(PANEL_WIDTH, y);\n      newLabelY(String(i), y);\n    }\n\n    // x 軸ラベルを追加する\n    for (let i = 0; i < this.n; i += 2) {\n      const x = PANEL_WIDTH * getPer(i, 0, this.n);\n      newLabelX(String(this.xaxis[i]), x);\n    }\n\n    borderGraphics\n      .lineStyle(1.5, 0x888888)\n      .drawRoundedRect(0, 0, PANEL_WIDTH, PANEL_HEIGHT, 2);\n  }\n\n  newText(\n    parent: PIXI.Graphics,\n    x: number,\n    y: number,\n    font: PIXI.TextStyle\n  ): PIXI.Text {\n    const t = new PIXI.Text('', font);\n    t.x = x;\n    t.y = y;\n    t.anchor.x = 0.5;\n    t.anchor.y = 0.5;\n    parent.addChild(t);\n    return t;\n  }\n\n  initChart(): void {\n    if (this.chartContainer === undefined) return;\n\n    this.chartGraphics = newGraphics(this.chartContainer);\n    const dropShadowFilter = new DropShadowFilter();\n    dropShadowFilter.color = 0x000000;\n    dropShadowFilter.alpha = 0.3;\n    dropShadowFilter.distance = Math.hypot(1, 2);\n    dropShadowFilter.angle = Math.atan2(1, 2);\n    dropShadowFilter.blur = 3;\n    this.chartGraphics.filters = [dropShadowFilter];\n\n    // マウスオーバー時に表示する線と数字を用意する\n    const countText = this.newText(\n      this.chartGraphics,\n      0,\n      0,\n      new PIXI.TextStyle({\n        fontFamily: LABEL_FONT_FAMILY,\n        fontSize: 10,\n        fill: 0x000000,\n      })\n    );\n    countText.visible = false;\n    const countGraphics = newGraphics(this.chartContainer);\n    countGraphics\n      .lineStyle(1.0, 0xdddddd)\n      .moveTo(0, 20)\n      .lineTo(0, PANEL_HEIGHT);\n    countGraphics.y = OFFSET_Y;\n    countGraphics.visible = false;\n    const mouseover = (i: number): void => {\n      const x = OFFSET_X + PANEL_WIDTH * getPer(i + 0.5, 0, this.n);\n      countText.text = `${this.data[i]}`;\n      countText.style.fill = getColor(this.xaxis[i])[1];\n      countText.x = x;\n      countText.y = OFFSET_Y + 10;\n      countGraphics.x = x;\n      countText.visible = true;\n      countGraphics.visible = true;\n    };\n    const mouseout = (): void => {\n      countText.visible = false;\n      countGraphics.visible = false;\n    };\n\n    // ヒストグラム本体を描画する\n    for (let i = 0; i < this.n; ++i) {\n      const histogramGraphics = newGraphics(this.chartGraphics);\n\n      const rectHeight = PANEL_HEIGHT * getPer(this.data[i], 0, this.yMax);\n\n      const x0 = Math.floor(OFFSET_X + PANEL_WIDTH * getPer(i, 0, this.n));\n      const x1 = Math.floor(OFFSET_X + PANEL_WIDTH * getPer(i + 1, 0, this.n));\n      histogramGraphics.x = x0;\n      histogramGraphics.y = OFFSET_Y + PANEL_HEIGHT - rectHeight;\n      histogramGraphics\n        .lineStyle(0.5, 0xffffff)\n        .beginFill(getColor(this.xaxis[i])[3])\n        .drawRect(0, 0, x1 - x0 - 1, rectHeight);\n\n      const hitAreaRect = new PIXI.Rectangle(\n        0,\n        +rectHeight - PANEL_HEIGHT,\n        PANEL_WIDTH / this.n,\n        PANEL_HEIGHT\n      );\n      histogramGraphics.hitArea = hitAreaRect;\n      histogramGraphics.interactive = true;\n      histogramGraphics.on('mouseover', () => {\n        mouseover(i);\n      });\n      histogramGraphics.on('mouseout', () => {\n        mouseout();\n      });\n    }\n\n    // ユーザのレーティングを表す線を描画する\n    void this.initUserRatingLine(this.rating);\n  }\n\n  getXandColor(rating: number): [number, number] {\n    let x = PANEL_WIDTH;\n    let col = 0x000000;\n    for (let i = this.n - 1; i >= 0; i--) {\n      if (this.xaxis[i] <= rating) {\n        const per = getPer(rating + 0.5, this.xaxis[i], this.xaxis[i + 1]);\n        x = PANEL_WIDTH * getPer(i + per, 0, this.n);\n        col = getColor(this.xaxis[i])[3];\n        break;\n      }\n    }\n    return [x, col];\n  }\n\n  initUserRatingLine(rating: number): void {\n    if (this.chartContainer === undefined) return;\n    if (this.chartGraphics === undefined) return;\n\n    const [x, col] = this.getXandColor(rating);\n    this.lineGraphics = newGraphics(this.chartContainer);\n    this.lineGraphics\n      .lineStyle(1.0, 0x000000)\n      .moveTo(0, 0)\n      .lineTo(0, PANEL_HEIGHT);\n    this.lineGraphics.x = OFFSET_X + x;\n    this.lineGraphics.y = OFFSET_Y;\n    this.ratingText = this.newText(\n      this.chartGraphics,\n      OFFSET_X + x,\n      12,\n      new PIXI.TextStyle({\n        fontFamily: LABEL_FONT_FAMILY,\n        fontSize: 11,\n        fill: col,\n      })\n    );\n    this.ratingText.text = String(rating);\n  }\n\n  updateUserRatingLine(rating: number): void {\n    this.rating = rating;\n    if (this.lineGraphics === undefined) return;\n    if (this.ratingText === undefined) return;\n\n    this.lineGraphics.x = OFFSET_X + this.getXandColor(rating)[0];\n    this.ratingText.text = String(rating);\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport useFontFaceObserver from 'use-font-face-observer';\nimport * as PIXI from 'pixi.js';\nimport { LABEL_FONT_FAMILY, RATING_FONT_FAMILY } from './StatusCanvas';\nimport { RatingDistributionChartCanvas } from './RatingDistributionChartCanvas';\n\ninterface Props {\n  xaxis: number[];\n  data: number[];\n  rating: number;\n}\n\nexport const RatingDistributionGraph: React.FC<Props> = (props) => {\n  const { xaxis, data, rating } = props;\n  const isFontListLoaded = useFontFaceObserver([\n    { family: RATING_FONT_FAMILY },\n    { family: LABEL_FONT_FAMILY },\n  ]);\n  const chartCanvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [canvas, setCanvas] = useState<RatingDistributionChartCanvas>();\n\n  useEffect(() => {\n    const chartCanvas: HTMLCanvasElement | null = chartCanvasRef.current;\n    if (chartCanvas === null) return;\n\n    const _chartApp = new PIXI.Application({\n      width: 640,\n      height: 480,\n      view: chartCanvas,\n      antialias: true,\n    });\n    _chartApp.renderer.backgroundColor = 0xffffff;\n\n    const _chartCanvas = new RatingDistributionChartCanvas(_chartApp);\n    setCanvas(_chartCanvas);\n  }, []);\n\n  useEffect(() => {\n    if (!isFontListLoaded) return;\n    if (!data) return;\n    if (!canvas) return;\n\n    if (data.length === 0) {\n      canvas.destroy();\n      return;\n    }\n    canvas.init(xaxis, data, rating);\n  }, [isFontListLoaded, data, canvas]);\n\n  return (\n    <>\n      <div>\n        <canvas\n          style={{\n            margin: '0px auto',\n            maxWidth: '640px',\n            maxHeight: '480px',\n            height: '100%',\n            width: '100%',\n            display: 'block',\n          }}\n          ref={chartCanvasRef}\n          width=\"640\"\n          height=\"480\"\n        ></canvas>\n      </div>\n    </>\n  );\n};\n","import * as PIXI from 'pixi.js';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { StatusCanvas } from './StatusCanvas';\nimport { getPer } from '../../utils';\nimport { newGraphics } from '../../utils/Shape';\nimport { COLORS, STEP_SIZE, getColor } from '../../utils/Rating';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\n\nconst MARGIN_VAL_X = 86400 * 30;\nconst MARGIN_VAL_Y_LOW = 100;\nconst MARGIN_VAL_Y_HIGH = 300;\nconst OFFSET_X = 50;\nconst OFFSET_Y = 5;\nconst PANEL_WIDTH = 640 - OFFSET_X - 10;\nconst PANEL_HEIGHT = 360 - OFFSET_Y - 30;\nconst HIGHEST_WIDTH = 80;\nconst HIGHEST_HEIGHT = 20;\nconst START_YEAR = 2010;\nconst MONTH_NAMES = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\nconst YEAR_SEC = 86400 * 365;\n\n// additional\nconst LABEL_FONT_FAMILY = 'Lato';\n\nexport class ChartCanvas {\n  app: PIXI.Application;\n  chartContainer?: PIXI.Container;\n  x_min!: number;\n  x_max!: number;\n  y_min!: number;\n  y_max!: number;\n  labelTextStyle!: PIXI.TextStyle;\n  R!: number;\n\n  constructor(app: PIXI.Application) {\n    this.app = app;\n    this.chartContainer = undefined;\n    // void this.init();\n  }\n\n  destroy(): void {\n    if (this.chartContainer) {\n      this.chartContainer.destroy({\n        children: true,\n        texture: true,\n        baseTexture: true,\n      });\n      this.chartContainer = undefined;\n    }\n  }\n\n  init(ratingHistory: RatingHistoryEntry[], statusCanvas: StatusCanvas): void {\n    this.destroy();\n    this.chartContainer = new PIXI.Container();\n    void this.app.stage.addChild(this.chartContainer);\n\n    this.R = 1.0;\n\n    this.x_min = 100000000000;\n    this.x_max = 0;\n    this.y_min = 10000;\n    this.y_max = 0;\n    ratingHistory.forEach((ratingHistoryEntry) => {\n      this.x_min = Math.min(this.x_min, ratingHistoryEntry.EndTime);\n      this.x_max = Math.max(this.x_max, ratingHistoryEntry.EndTime);\n      this.y_min = Math.min(this.y_min, ratingHistoryEntry.NewRating);\n      this.y_max = Math.max(this.y_max, ratingHistoryEntry.NewRating);\n    });\n    this.x_min -= MARGIN_VAL_X;\n    this.x_max += MARGIN_VAL_X;\n    this.y_min = Math.min(1500, Math.max(0, this.y_min - MARGIN_VAL_Y_LOW));\n    this.y_max += MARGIN_VAL_Y_HIGH;\n\n    this.labelTextStyle = new PIXI.TextStyle({\n      fontFamily: LABEL_FONT_FAMILY,\n      fontSize: 12 * this.R,\n      fill: 0x000000,\n    });\n\n    void this.initBackground();\n    void this.initChart(ratingHistory, statusCanvas);\n  }\n\n  initBackground(): void {\n    if (this.chartContainer === undefined) return;\n\n    const panelGraphics = new PIXI.Graphics();\n    panelGraphics.x = OFFSET_X * this.R;\n    panelGraphics.y = OFFSET_Y * this.R;\n    panelGraphics.alpha = 0.3;\n    const borderGraphics = new PIXI.Graphics();\n    borderGraphics.x = OFFSET_X * this.R;\n    borderGraphics.y = OFFSET_Y * this.R;\n\n    void this.chartContainer.addChild(panelGraphics);\n    void this.chartContainer.addChild(borderGraphics);\n\n    // 背景色を塗る\n    let y1 = 0;\n    for (let i = COLORS.length - 1; i >= 0; i--) {\n      const y2 =\n        PANEL_HEIGHT -\n        PANEL_HEIGHT * getPer(COLORS[i][0], this.y_min, this.y_max);\n      if (y2 > 0 && y1 < PANEL_HEIGHT) {\n        y1 = Math.max(y1, 0);\n        panelGraphics\n          .beginFill(COLORS[i][3])\n          .drawRect(\n            0,\n            y1 * this.R,\n            PANEL_WIDTH * this.R,\n            (Math.min(y2, PANEL_HEIGHT) - y1) * this.R\n          )\n          .endFill();\n      }\n      y1 = y2;\n    }\n\n    const newLabelY = (s: string, y: number): PIXI.Text => {\n      const t = new PIXI.Text(s, this.labelTextStyle);\n      t.x = (OFFSET_X - 10) * this.R;\n      t.y = (OFFSET_Y + y) * this.R;\n      t.anchor.x = 1.0;\n      t.anchor.y = 0.5;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    const newLabelX = (s: string, x: number, y: number): PIXI.Text => {\n      const t = new PIXI.Text(s, this.labelTextStyle);\n      t.x = (OFFSET_X + x) * this.R;\n      t.y = (OFFSET_Y + PANEL_HEIGHT + 2 + y) * this.R;\n      t.anchor.x = 0.5;\n      t.anchor.y = 0.0;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    // y 軸ラベルとグリッド線を追加する\n    for (let i = 0; i <= this.y_max; i += STEP_SIZE) {\n      if (i >= this.y_min) {\n        const y =\n          PANEL_HEIGHT - PANEL_HEIGHT * getPer(i, this.y_min, this.y_max);\n        void newLabelY(String(i), y);\n        borderGraphics.lineStyle(1.0 * this.R, 0xffffff);\n        if (i === 2000) borderGraphics.lineStyle(1.0 * this.R, 0x000000);\n        borderGraphics\n          .moveTo(0, y * this.R)\n          .lineTo(PANEL_WIDTH * this.R, y * this.R);\n      }\n    }\n    borderGraphics.lineStyle(1.0 * this.R, 0xffffff);\n\n    // x 軸ラベルとグリッド線を追加する\n    let month_step = 6;\n    for (let i = 3; i >= 1; i--) {\n      if (this.x_max - this.x_min <= YEAR_SEC * i + MARGIN_VAL_X * 2)\n        month_step = i;\n    }\n    let isFirst = true;\n    for (let i = START_YEAR; i < 3000; i++) {\n      let isEnded = false;\n      for (let j = 0; j < 12; j += month_step) {\n        const month = `0${j + 1}`.slice(-2);\n        const unix = Date.parse(`${i}-${month}-01T00:00:00`) / 1000;\n        if (this.x_min < unix && unix < this.x_max) {\n          const x = PANEL_WIDTH * getPer(unix, this.x_min, this.x_max);\n          if (j === 0 || isFirst) {\n            void newLabelX(MONTH_NAMES[j], x, 0);\n            void newLabelX(String(i), x, 13);\n            isFirst = false;\n          } else {\n            void newLabelX(MONTH_NAMES[j], x, 0);\n          }\n          borderGraphics\n            .moveTo(x * this.R, 0)\n            .lineTo(x * this.R, PANEL_HEIGHT * this.R);\n        }\n        if (unix > this.x_max) {\n          isEnded = true;\n          break;\n        }\n      }\n      if (isEnded) break;\n    }\n    borderGraphics\n      .lineStyle(1.5 * this.R, 0x888888)\n      .drawRoundedRect(\n        0,\n        0,\n        PANEL_WIDTH * this.R,\n        PANEL_HEIGHT * this.R,\n        2 * this.R\n      );\n  }\n\n  initChart(\n    ratingHistory: RatingHistoryEntry[],\n    statusGraphics: StatusCanvas\n  ): void {\n    if (this.chartContainer === undefined) return;\n\n    const chartGraphics = new PIXI.Graphics();\n    this.chartContainer.addChild(chartGraphics);\n    // chart_container.shadow = new cj.Shadow(\"rgba(0,0,0,0.3)\", 1, 2, 3);\n    const dropShadowFilter = new DropShadowFilter();\n    dropShadowFilter.color = 0x000000;\n    dropShadowFilter.alpha = 0.3;\n    dropShadowFilter.distance = Math.hypot(1, 2) * this.R;\n    dropShadowFilter.angle = Math.atan2(1, 2);\n    dropShadowFilter.blur = 3 * this.R;\n    chartGraphics.filters = [dropShadowFilter];\n\n    const lineGraphics = newGraphics(chartGraphics);\n    const highestGraphics = newGraphics(chartGraphics);\n    highestGraphics.interactive = true;\n\n    const mouseoverVertex = (i: number): void => {\n      vertexGraphics[i].scale.x = vertexGraphics[i].scale.y = 1.2;\n      statusGraphics.set(ratingHistory[i], true);\n    };\n\n    const mouseoutVertex = (i: number): void => {\n      vertexGraphics[i].scale.x = vertexGraphics[i].scale.y = 1;\n    };\n    const { argmax: highestIdx } = ratingHistory.reduce(\n      ({ argmax, maxRating }, ratingHistoryEntry, index) => {\n        if (ratingHistoryEntry.NewRating > maxRating) {\n          argmax = index;\n          maxRating = ratingHistoryEntry.NewRating;\n        }\n        return { argmax, maxRating };\n      },\n      { argmax: 0, maxRating: 0 }\n    );\n\n    const vertexGraphics = ratingHistory.map((ratingHistoryEntry, index) => {\n      const vertex = newGraphics(chartGraphics);\n      vertex.lineStyle(1.0 * this.R, 0xffffff);\n      if (index === highestIdx) vertex.lineStyle(1.0 * this.R, 0x000000);\n      vertex\n        .beginFill(getColor(ratingHistoryEntry.NewRating)[3])\n        .drawCircle(0, 0, 3.5 * this.R);\n      vertex.x =\n        (OFFSET_X +\n          PANEL_WIDTH *\n            getPer(ratingHistoryEntry.EndTime, this.x_min, this.x_max)) *\n        this.R;\n      vertex.y =\n        (OFFSET_Y +\n          (PANEL_HEIGHT -\n            PANEL_HEIGHT *\n              getPer(ratingHistoryEntry.NewRating, this.y_min, this.y_max))) *\n        this.R;\n      vertex.interactive = true;\n      vertex.on('mouseover', () => {\n        mouseoverVertex(index);\n      });\n      vertex.on('mouseout', () => {\n        mouseoutVertex(index);\n      });\n      return vertex;\n    });\n    {\n      let dx = 80 * this.R;\n      if ((this.x_min + this.x_max) / 2 < ratingHistory[highestIdx].EndTime)\n        dx = -80 * this.R;\n      const x = vertexGraphics[highestIdx].x + dx;\n      const y = vertexGraphics[highestIdx].y - 16;\n      highestGraphics\n        .lineStyle(1.0 * this.R, 0xffffff)\n        .moveTo(vertexGraphics[highestIdx].x, vertexGraphics[highestIdx].y)\n        .lineTo(x, y);\n      highestGraphics\n        .lineStyle(1.0 * this.R, 0x888888)\n        .beginFill(0xffffff)\n        .drawRoundedRect(\n          x - (HIGHEST_WIDTH / 2) * this.R,\n          y - (HIGHEST_HEIGHT / 2) * this.R,\n          HIGHEST_WIDTH * this.R,\n          HIGHEST_HEIGHT * this.R,\n          2 * this.R\n        );\n      const highest_text = new PIXI.Text(\n        `Highest: ${ratingHistory[highestIdx].NewRating}`,\n        this.labelTextStyle\n      );\n      highest_text.x = x;\n      highest_text.y = y;\n      highest_text.anchor.x = 0.5;\n      highest_text.anchor.y = 0.5;\n      this.chartContainer.addChild(highest_text);\n\n      highestGraphics.on('mouseover', () => {\n        mouseoverVertex(highestIdx);\n      });\n      highestGraphics.on('mouseout', () => {\n        mouseoutVertex(highestIdx);\n      });\n    }\n    // 折れ線を描画\n    (\n      [\n        [2.0, 0xaaaaaa],\n        [1.0, 0xffffff],\n      ] as [number, number][]\n    ).forEach(([width, color]) => {\n      lineGraphics.lineStyle(width * this.R, color);\n      lineGraphics.moveTo(vertexGraphics[0].x, vertexGraphics[0].y);\n      vertexGraphics.forEach((vertex) => {\n        lineGraphics.lineTo(vertex.x, vertex.y);\n      });\n    });\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport useFontFaceObserver from 'use-font-face-observer';\nimport * as PIXI from 'pixi.js';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport { ChartCanvas } from './ChartCanvas';\nimport {\n  StatusCanvas,\n  LABEL_FONT_FAMILY,\n  RATING_FONT_FAMILY,\n} from './StatusCanvas';\n\ninterface Props {\n  ratingHistory?: RatingHistoryEntry[];\n  paramUser: string;\n}\n\nexport const RatingGraph: React.FC<Props> = (props) => {\n  const { ratingHistory } = props;\n  const isFontListLoaded = useFontFaceObserver([\n    { family: RATING_FONT_FAMILY },\n    { family: LABEL_FONT_FAMILY },\n  ]);\n  const statusCanvasRef = useRef<HTMLCanvasElement | null>(null);\n  const chartCanvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [canvases, setCanvases] = useState<[StatusCanvas, ChartCanvas]>();\n\n  const R = 1.0;\n  useEffect(() => {\n    const statusCanvas: HTMLCanvasElement | null = statusCanvasRef.current;\n    const chartCanvas: HTMLCanvasElement | null = chartCanvasRef.current;\n    if (statusCanvas === null || chartCanvas === null) return;\n\n    const _statusApp = new PIXI.Application({\n      width: 640,\n      height: 80,\n      view: statusCanvas,\n      antialias: true,\n    });\n    const _chartApp = new PIXI.Application({\n      width: 640 * R,\n      height: 360 * R,\n      view: chartCanvas,\n      antialias: true,\n    });\n\n    _statusApp.renderer.backgroundColor = 0xffffff;\n    _chartApp.renderer.backgroundColor = 0xffffff;\n\n    const _statusCanvas = new StatusCanvas(_statusApp);\n    const _chartCanvas = new ChartCanvas(_chartApp);\n\n    // _statusCanvas.init();\n    setCanvases([_statusCanvas, _chartCanvas]);\n  }, []);\n\n  useEffect(() => {\n    if (!isFontListLoaded) return;\n    if (!ratingHistory) return;\n    if (!canvases) return;\n\n    const [statusCanvas, chartCanvas] = canvases;\n    if (ratingHistory.length === 0) {\n      chartCanvas.destroy();\n      statusCanvas.destroy();\n      return;\n    }\n    const lastHistory = ratingHistory[ratingHistory.length - 1];\n\n    statusCanvas.init();\n    chartCanvas.init(ratingHistory, statusCanvas);\n    statusCanvas.set(lastHistory, false);\n  }, [isFontListLoaded, ratingHistory, canvases]);\n\n  return (\n    <>\n      <div>\n        <canvas\n          style={{\n            margin: '0px auto',\n            maxWidth: '640px',\n            maxHeight: '80px',\n            height: '100%',\n            width: '100%',\n            display: 'block',\n          }}\n          ref={statusCanvasRef}\n          width=\"640\"\n          height=\"80\"\n        ></canvas>\n      </div>\n      <div>\n        <canvas\n          style={{\n            margin: '0px auto',\n            maxWidth: '640px',\n            maxHeight: '360px',\n            height: '100%',\n            width: '100%',\n            display: 'block',\n          }}\n          ref={chartCanvasRef}\n          width=\"640\"\n          height=\"360\"\n        ></canvas>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport useSWR from 'swr';\nimport { Alert } from 'reactstrap';\nimport { FormBlock } from './FormBlock';\nimport { UserInfoTable } from './UserInfoTable';\nimport { Contest } from '../../interfaces/Contest';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport {\n  ContestResults,\n  fetchContestResults,\n  fetchContests,\n} from '../../utils/Data';\nimport { RatingRanks } from '../../utils/Rating';\nimport { ChartSection } from './ChartSection';\n\ninterface Props {\n  match: {\n    params: {\n      user: string;\n    };\n  };\n}\n\nexport const RatingPage: React.FC<Props> = (props) => {\n  const paramUser: string = props.match.params.user ?? '';\n\n  const { data: contests, error: contestsError } = useSWR<Contest[], Error>(\n    '/json/contests/contests',\n    fetchContests\n  );\n  const { data: contestResultsArray, error: contestResultsArrayError } = useSWR<\n    (ContestResults | undefined)[],\n    Error\n  >(contests ? `/json/results/` : null, () => {\n    if (!contests) return Promise.resolve([undefined]);\n    const promises = contests.map((contest) =>\n      fetchContestResults(contest.slug)\n    );\n    return Promise.all(promises);\n  });\n\n  const ratingHistory =\n    paramUser && contestResultsArray\n      ? (contestResultsArray\n          .map((contestResults) => {\n            if (contestResults && paramUser in contestResults)\n              return contestResults[paramUser];\n            else return undefined;\n          })\n          .filter(\n            (contestResult) => contestResult !== undefined\n          ) as RatingHistoryEntry[])\n      : undefined;\n  const ratingRanks = new RatingRanks(contestResultsArray);\n\n  return (\n    <>\n      <h2>Description</h2>\n      <p>\n        AtCoder\n        で行われたマラソンコンテストのレーティング推移をグラフに表示します．\n      </p>\n      <p>\n        AtCoder\n        が公式にマラソンレートのグラフ表示機能を実装するまでのつなぎです．\n      </p>\n      <hr />\n\n      {contestsError ? (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          Failed to fetch contest list.\n        </Alert>\n      ) : contests === undefined ? (\n        <div\n          style={{\n            width: '100%',\n            height: '500px',\n            textAlign: 'center',\n            marginTop: '100px',\n            marginBottom: '100px',\n          }}\n        >\n          Fetch contest data...\n        </div>\n      ) : contestResultsArrayError ? (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          Failed to fetch contest results.\n        </Alert>\n      ) : contestResultsArray === undefined ? (\n        <div\n          style={{\n            width: '100%',\n            height: '500px',\n            textAlign: 'center',\n            marginTop: '100px',\n            marginBottom: '100px',\n          }}\n        >\n          Fetch contest results...\n        </div>\n      ) : (\n        <></>\n      )}\n      <FormBlock paramUser={paramUser} />\n      <hr />\n      {ratingHistory?.length ? (\n        <div\n          style={{ maxWidth: '640px', marginLeft: 'auto', marginRight: 'auto' }}\n        >\n          <UserInfoTable\n            paramUser={paramUser}\n            ratingHistory={ratingHistory}\n            ratingRanks={ratingRanks}\n          />\n          <ChartSection\n            paramUser={paramUser}\n            ratingHistory={ratingHistory}\n            ratingRanks={ratingRanks}\n          />\n        </div>\n      ) : (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          AtCoder ID is empty or invalid.\n        </Alert>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport { SWRConfig } from 'swr';\nimport { NavigationBar } from './components/NavigationBar';\n// import logo from './logo.svg';\nimport './App.css';\nimport { RatingPage } from './pages/rating';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <SWRConfig value={{ revalidateOnFocus: false }}>\n        <Router>\n          <NavigationBar />\n          <Container\n            style={{ width: '100%', maxWidth: '90%', marginTop: '80px' }}\n          >\n            <Switch>\n              <Route\n                exact\n                path=\"/rating/:user\"\n                component={RatingPage as React.FC}\n              />\n              <Route exact path=\"/rating/\" component={RatingPage as React.FC} />\n              <Redirect path=\"/\" to=\"/rating/\" />\n            </Switch>\n          </Container>\n          <footer\n            className=\"footer\"\n            style={{\n              marginTop: '30px',\n              padding: '30px',\n              backgroundColor: '#efefef',\n            }}\n          >\n            <div className=\"container\">\n              連絡先:{' '}\n              <a\n                href=\"https://twitter.com/iiljj\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                si (@iiljj) / Twitter\n              </a>\n              {', '}\n              <a\n                href=\"https://github.com/iilj\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                iilj (iilj) / GitHub\n              </a>\n            </div>\n          </footer>\n        </Router>\n      </SWRConfig>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}