{"version":3,"sources":["pages/rating/ChartSection.tsx","components/NavigationBar.tsx","pages/rating/FormBlock.tsx","utils/index.ts","utils/BinaryIndexedTree.ts","utils/Rating.ts","pages/rating/UserInfoTable.tsx","utils/Data.ts","utils/Shape.ts","pages/rating/StatusCanvas.ts","pages/rating/RatingDistributionChartCanvas.ts","pages/rating/RatingDistributionGraph.tsx","pages/rating/ChartCanvas.ts","pages/rating/RatingGraph.tsx","pages/rating/index.tsx","components/PaginationPanel.tsx","utils/RatingColor.ts","components/TopcoderLikeCircle.tsx","components/RatingCircle.tsx","pages/ranking/RankingTable.tsx","pages/ranking/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ChartTab","NavigationBar","useState","isOpen","setIsOpen","Navbar","color","light","expand","fixed","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","style","marginRight","icon","faChartLine","faSortAmountDown","FormBlock","props","paramUser","user","setUser","ratingPagePath","useMemo","generatePath","history","useHistory","Row","Col","sm","FormGroup","width","Label","for","Input","value","type","name","id","placeholder","onChange","e","target","onKeyPress","key","push","Button","block","display","marginTop","getOrdinal","x","s","v","formatDate","d","year","String","getFullYear","month","getMonth","slice","date","getDate","getPer","l","r","BinaryIndexedTree","_length","data","length","this","Array","fill","k","ret","sum","COLORS","getColor","i","RatingRanks","contestResultsArray","bit","user2rating","user2ratingRankHistory","ratings","Map","undefined","forEach","contestResults","username","rankingEntry","get","oldRating","rating","NewRating","match","Place","win","add","set","rank","query","has","aaa","console","log","from","values","map","sort","a","b","ratingAndRank","xaxis","index","findIndex","pop","ratingAndUsername","UserInfoTable","ratingHistory","ratingRanks","lastResult","lastCompeted","Date","EndTime","getRank","ratingColor","fontSize","CONTESTS","fetchContests","fetch","process","catch","Error","then","json","Promise","resolve","CONTEST_RESULTS_MAP","fetchContestResults","contest","startsWith","submissions","newGraphics","parent","Graphics","addChild","newText","y","font","t","PIXI","fontFamily","anchor","LABEL_FONT_FAMILY","RATING_FONT_FAMILY","OFFSET_X","STATUS_WIDTH","STATUS_HEIGHT","Particle","statusContainer","object","angle","speed","velocityX","velocityY","rotateSpeed","life","initialX","initialY","alpha","useStar","Math","random","PI","cos","sin","visible","text","scale","rotation","Particles","particles","num","particle","disable","update","StatusCanvas","app","mode","borderGraphics","ratingText","placeText","diffText","dateText","contestNameText","standingsUrl","ticker","maxFPS","animate","destroy","children","texture","baseTexture","stage","OFFSET_Y","interactive","cursor","on","window","location","href","particle_flag","performance","old_rating","OldRating","place","contest_name","ContestName","tmp","clear","lineStyle","drawRoundedRect","abs","toLocaleDateString","particleNum","floor","pow","pre","getRatingPer","StandingsUrl","PANEL_WIDTH","PANEL_HEIGHT","RatingDistributionChartCanvas","chartContainer","chartGraphics","labelTextStyle","n","yMax","lineGraphics","reduce","prev","curr","max","initBackground","initChart","panelGraphics","newLabelY","newLabelX","moveTo","lineTo","dropShadowFilter","DropShadowFilter","distance","hypot","atan2","blur","filters","countText","countGraphics","histogramGraphics","rectHeight","x0","x1","beginFill","drawRect","hitAreaRect","hitArea","mouseover","initUserRatingLine","col","per","getXandColor","RatingDistributionGraph","isFontListLoaded","useFontFaceObserver","family","chartCanvasRef","useRef","canvas","setCanvas","useEffect","chartCanvas","current","_chartApp","height","view","antialias","renderer","backgroundColor","_chartCanvas","init","margin","maxWidth","maxHeight","ref","MARGIN_VAL_X","MONTH_NAMES","ChartCanvas","x_min","x_max","y_min","y_max","R","ratingHistoryEntry","statusCanvas","min","getRating","y1","y2","endFill","month_step","isFirst","isEnded","j","unix","parse","statusGraphics","highestGraphics","mouseoverVertex","vertexGraphics","mouseoutVertex","highestIdx","argmax","maxRating","vertex","drawCircle","dx","HIGHEST_WIDTH","HIGHEST_HEIGHT","highest_text","RatingGraph","statusCanvasRef","canvases","setCanvases","_statusApp","_statusCanvas","lastHistory","ChartWrapper","ChartSection","activeTab","setActiveTab","tweetTitle","setTweetTitle","_tweetTitle","face","getDiffText","getHistogram","ButtonGroup","size","active","ratingDistribution","textAlign","TwitterShareButton","url","title","TwitterIcon","round","UncontrolledTooltip","placement","replaceAll","RatingPage","params","useSWR","contests","contestsError","error","promises","slug","all","contestResultsArrayError","filter","contestResult","Alert","marginBottom","marginLeft","pageList","currPage","pageStartIndex","totalPages","start","end","pageNumbers","tmpExp","tmpPageNumber","unshift","PaginationPanel","renderSizePerPage","totalSize","sizePerPage","sizePerPageList","onSizePerPageChange","page","onPageChange","ceil","p","Pagination","flexWrap","justifyContent","pageNumber","PaginationItem","PaginationLink","RatingColors","getRatingColor","TopcoderLikeCircle","fillRatio","big","styleOptions","metalColor","base","highlight","getRatingMetalColorCode","borderColor","background","colorCode","getRatingColorCode","getStyleOptions","RatingCircle","tooltipOpen","setTooltipOpen","toggleTooltipState","circleId","Badge","pill","Tooltip","toggle","_sortCaret","order","faSortUp","faSortDown","faSort","RankingTable","ranking","columns","dataField","classes","headerClasses","sortFunc","sortCaret","textFilter","formatter","cell","_row","btnId","rel","_a","_b","pagination","paginationFactory","custom","paginationProps","paginationTableProps","keyField","bootstrap4","striped","filterFactory","wrapperClasses","RankingPage","getRanking","App","revalidateOnFocus","Container","exact","path","component","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.401516ed.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Button, ButtonGroup, UncontrolledTooltip } from 'reactstrap';\nimport { TwitterIcon, TwitterShareButton } from 'react-share';\nimport { RatingHistoryEntryEx } from '../../interfaces/RatingHistoryEntry';\nimport { RatingRanks } from '../../utils/Rating';\nimport { RatingDistributionGraph } from './RatingDistributionGraph';\nimport { RatingGraph } from './RatingGraph';\nimport { getOrdinal } from '../../utils';\n\ninterface Props {\n  paramUser: string;\n  ratingHistory?: RatingHistoryEntryEx[];\n  ratingRanks: RatingRanks;\n}\n\nenum ChartTab {\n  'rating' = 0,\n  'performance' = 1,\n  'ratingDistribution' = 2,\n}\n\nconst ChartWrapper: React.FC<{\n  display: boolean;\n}> = (props) => <>{props.display ? props.children : <></>}</>;\n\nconst getDiffText = (x: number): string => {\n  const sign = x === 0 ? '±' : x < 0 ? '-' : '+';\n  const face = x === 0 ? ':|' : x < 0 ? ':(' : ':)';\n  return `(${sign}${Math.abs(x)}) ${face}`;\n};\n\nexport const ChartSection: React.FC<Props> = (props) => {\n  const { paramUser, ratingHistory, ratingRanks } = props;\n\n  const [activeTab, setActiveTab] = useState<ChartTab>(ChartTab.rating);\n  const [tweetTitle, setTweetTitle] = useState('');\n\n  useEffect(() => {\n    if (!ratingHistory) return;\n    const lastHistory = ratingHistory[ratingHistory.length - 1];\n    const rank = lastHistory.Place;\n    const _tweetTitle =\n      `${paramUser} took ${getOrdinal(rank)} place in ${\n        lastHistory.ContestName\n      }!\\n` +\n      `Performance: ${lastHistory.performance}\\n` +\n      `Rating: ${lastHistory.OldRating}→${lastHistory.NewRating} ${getDiffText(\n        lastHistory.NewRating - lastHistory.OldRating\n      )}\\n` +\n      `AtCoder Marathon Rating History`;\n    setTweetTitle(_tweetTitle);\n  }, [paramUser, ratingHistory]);\n\n  const [xaxis, data] = ratingRanks.getHistogram();\n  const rating = ratingRanks.getRating(paramUser);\n\n  return (\n    <>\n      <div style={{ marginTop: '20px' }}>\n        <ButtonGroup size=\"sm\" className=\"btn-group-ac-style\">\n          <Button\n            onClick={() => {\n              setActiveTab(ChartTab.rating);\n            }}\n            active={activeTab === ChartTab.rating}\n          >\n            Rating\n          </Button>\n          <Button\n            onClick={() => {\n              setActiveTab(ChartTab.performance);\n            }}\n            active={activeTab === ChartTab.performance}\n          >\n            Performance\n          </Button>\n          <Button\n            onClick={() => {\n              setActiveTab(ChartTab.ratingDistribution);\n            }}\n            active={activeTab === ChartTab.ratingDistribution}\n          >\n            Rating Distribution\n          </Button>\n        </ButtonGroup>\n      </div>\n\n      <div style={{ marginTop: '20px' }}>\n        <ChartWrapper display={activeTab === ChartTab.rating}>\n          <RatingGraph\n            paramUser={paramUser}\n            ratingHistory={ratingHistory}\n            mode=\"Rating\"\n          />\n        </ChartWrapper>\n        <ChartWrapper display={activeTab === ChartTab.performance}>\n          <RatingGraph\n            paramUser={paramUser}\n            ratingHistory={ratingHistory}\n            mode=\"Performance\"\n          />\n        </ChartWrapper>\n        <ChartWrapper display={activeTab === ChartTab.ratingDistribution}>\n          <RatingDistributionGraph xaxis={xaxis} data={data} rating={rating} />\n        </ChartWrapper>\n      </div>\n      <div style={{ textAlign: 'center', marginTop: '30px' }}>\n        <TwitterShareButton\n          url={window.location.href}\n          title={tweetTitle}\n          id=\"chart-share-button\"\n        >\n          <TwitterIcon size={40} round />\n        </TwitterShareButton>\n        <UncontrolledTooltip placement=\"top\" target=\"chart-share-button\">\n          {(tweetTitle + ' ' + window.location.href).replaceAll('\\n', ' ')}\n        </UncontrolledTooltip>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavLink,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChartLine,\n  faSortAmountDown,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport const NavigationBar: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n      <NavbarBrand tag={Link} to={'/'}>\n        AtCoder Marathon Rating History\n      </NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/rating/\">\n              <FontAwesomeIcon\n                style={{ marginRight: '4px' }}\n                icon={faChartLine}\n              />\n              Rating\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/ranking/\">\n              <FontAwesomeIcon\n                style={{ marginRight: '4px' }}\n                icon={faSortAmountDown}\n              />\n              Ranking\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Button, Input, Row, FormGroup, Label, Col } from 'reactstrap';\n\ninterface Props {\n  paramUser: string;\n}\n\nconst generatePath = (user: string): string => `/rating/${user}`;\n\nexport const FormBlock: React.FC<Props> = (props) => {\n  const { paramUser } = props;\n  const [user, setUser] = useState(paramUser);\n  const ratingPagePath = useMemo(() => generatePath(user), [user]);\n  const history = useHistory();\n\n  return (\n    <>\n      <Row>\n        <Col sm={12}>\n          <FormGroup style={{ width: '100%' }}>\n            <Label for=\"input-user\">ATCODER ID:</Label>\n            <Input\n              value={user}\n              type=\"text\"\n              name=\"input-user\"\n              id=\"input-user\"\n              placeholder={user ? user : 'eivour'}\n              onChange={(e): void => setUser(e.target.value)}\n              onKeyPress={(e): void => {\n                if (e.key === 'Enter') {\n                  history.push(ratingPagePath);\n                }\n              }}\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={12}>\n          <Button\n            color=\"primary\"\n            tag={NavLink}\n            to={ratingPagePath}\n            block\n            style={{ display: 'block', marginTop: '0.5rem' }}\n          >\n            Go\n          </Button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","/**\n * 順位の数値から順位文字列に変換する\n * @param x 順位\n * @returns 順位文字列\n */\nexport const getOrdinal = (x: number): string => {\n  const s = ['th', 'st', 'nd', 'rd'];\n  const v = x % 100;\n  return `${x}${s[(v - 20) % 10] || s[v] || s[0]}`;\n};\n\nexport const formatDate = (d: Date): string => {\n  const year = String(d.getFullYear());\n  const month = `0${d.getMonth() + 1}`.slice(-2);\n  const date = `0${d.getDate()}`.slice(-2);\n  return `${year}/${month}/${date}`;\n};\n\nexport const getPer = (x: number, l: number, r: number): number => {\n  return (x - l) / (r - l);\n};\n\n/**\n * returns array [start, start+1, ..., end].\n *\n * @param {number} start start number\n * @param {number} end end number\n * @returns {number[]} array\n */\nexport const range = (start: number, end: number): number[] =>\n  Array.from({ length: end - start + 1 }, (v, k) => k + start);\n","export class BinaryIndexedTree {\n  data: number[];\n  length: number;\n  constructor(_length: number) {\n    this.length = _length;\n    this.data = (Array(++_length) as number[]).fill(0);\n  }\n  sum(k: number): number {\n    let ret = 0;\n    for (++k; k > 0; k -= k & -k) ret += this.data[k];\n    return ret;\n  }\n  add(k: number, x: number): void {\n    for (++k; k < this.data.length; k += k & -k) this.data[k] += x;\n  }\n  // query for [l, r)\n  query(l: number, r: number): number {\n    return this.sum(r - 1) - this.sum(l - 1);\n  }\n}\n","import { BinaryIndexedTree } from './BinaryIndexedTree';\nimport { ContestResults } from './Data';\n\nexport const STEP_SIZE = 400;\nexport const COLORS: [number, string, number, number][] = [\n  [0, '#808080', 0.15, 0x808080],\n  [400, '#804000', 0.15, 0x804000],\n  [800, '#008000', 0.15, 0x008000],\n  [1200, '#00C0C0', 0.2, 0x00c0c0],\n  [1600, '#0000FF', 0.1, 0x0000ff],\n  [2000, '#C0C000', 0.25, 0xc0c000],\n  [2400, '#FF8000', 0.2, 0xff8000],\n  [2800, '#FF0000', 0.1, 0xff0000],\n];\n\n/**\n * レーティング x に関する色情報を返す\n * @param x レーティング\n * @returns [レーティング下限値，色文字列，アルファ値，色数値]\n */\nexport const getColor = (x: number): [number, string, number, number] => {\n  for (let i = COLORS.length - 1; i >= 0; i--) {\n    if (x >= COLORS[i][0]) return COLORS[i];\n  }\n  return [-1, '#000000', 0.1, 0x000000];\n};\n\n/**\n * 同色レーティング帯のうち何割の位置にいるかを求める\n * @param x レーティング値\n * @returns 割合\n */\nexport const getRatingPer = (x: number): number => {\n  let pre = COLORS[COLORS.length - 1][0] + STEP_SIZE;\n  for (let i = COLORS.length - 1; i >= 0; i--) {\n    if (x >= COLORS[i][0]) return (x - COLORS[i][0]) / (pre - COLORS[i][0]);\n    pre = COLORS[i][0];\n  }\n  return 0;\n};\n\nexport interface RankingEntry {\n  rank: number;\n  rating: number;\n  username: string;\n  win: number;\n  match: number;\n}\n\nconst MAX_RATING = 10000;\nexport class RatingRanks {\n  bit: BinaryIndexedTree;\n  user2rating: Map<string, RankingEntry>;\n  // userid => [rating, rank][]\n  user2ratingRankHistory: Map<string, [number, number][]>;\n  ratings: number[];\n\n  constructor(contestResultsArray?: (ContestResults | undefined)[]) {\n    this.bit = new BinaryIndexedTree(MAX_RATING);\n    this.user2rating = new Map<string, RankingEntry>();\n    this.user2ratingRankHistory = new Map<string, [number, number][]>();\n    if (contestResultsArray === undefined) {\n      this.ratings = [];\n      return;\n    }\n    contestResultsArray.forEach((contestResults) => {\n      if (contestResults === undefined) return;\n\n      // レーティング更新の反映\n      for (const username in contestResults) {\n        const rankingEntry = this.user2rating.get(username);\n        if (rankingEntry !== undefined) {\n          const oldRating = rankingEntry.rating;\n          rankingEntry.rating = contestResults[username].NewRating;\n          rankingEntry.match++;\n          if (contestResults[username].Place === 1) {\n            rankingEntry.win++;\n          }\n          this.bit.add(oldRating, -1);\n          this.bit.add(contestResults[username].NewRating, 1);\n        } else {\n          this.user2rating.set(username, {\n            rank: -1,\n            rating: contestResults[username].NewRating,\n            username,\n            win: contestResults[username].Place === 1 ? 1 : 0,\n            match: 1,\n          });\n          this.bit.add(contestResults[username].NewRating, 1);\n        }\n      }\n\n      // ランキング更新\n      this.user2rating.forEach(\n        (rankingEntry: RankingEntry, username: string) => {\n          const rank = this.bit.query(rankingEntry.rating + 1, MAX_RATING) + 1;\n          rankingEntry.rank = rank;\n          if (this.user2ratingRankHistory.has(username)) {\n            this.user2ratingRankHistory\n              .get(username)\n              ?.push([rankingEntry.rating, rank]);\n          } else {\n            this.user2ratingRankHistory.set(username, [\n              [rankingEntry.rating, rank],\n            ]);\n          }\n        }\n      );\n    });\n    // dump\n    const aaa = [] as number[];\n    for (let i = 0; i < 4000; ++i) {\n      aaa.push(this.bit.query(i, i + 1));\n    }\n    console.log(aaa);\n    this.ratings = Array.from(this.user2rating.values()).map(\n      (rankingEntry) => rankingEntry.rating\n    );\n    this.ratings.sort((a, b) => b - a);\n  }\n\n  getRank(username: string): number {\n    const ratingAndRank = this.user2ratingRankHistory.get(username);\n    if (ratingAndRank === undefined) return -1;\n    return ratingAndRank[ratingAndRank.length - 1][1];\n  }\n\n  getRating(username: string): number {\n    return this.user2rating.get(username)?.rating ?? 0;\n  }\n\n  getHistogram(): [number[], number[]] {\n    const xaxis = [\n      0, 1, 2, 3, 4, 5, 7, 9, 12, 15, 19, 25, 32, 42, 54, 69, 89, 114, 147, 188,\n      242, 311, 400,\n    ];\n    // 400 以降は 100 区切りで 10000 まで追加しておく\n    for (let x = 500; x < 10000; x += 100) {\n      xaxis.push(x);\n    }\n    const data = Array(xaxis.length) as number[];\n    data.fill(0);\n\n    // 区切りごとに個数を数える\n    this.ratings.forEach((rating) => {\n      const index: number = xaxis.findIndex(\n        (x, i) => x <= rating && rating < xaxis[i + 1]\n      );\n      if (index === -1) return;\n      data[index]++;\n    });\n\n    // 0 要素を後ろから削る\n    while (data[data.length - 1] === 0) {\n      data.pop();\n      xaxis.pop();\n    }\n    return [xaxis, data];\n  }\n\n  /** get {rank, rating, username, win, match}[] */\n  getRanking(): RankingEntry[] {\n    const ratingAndUsername = Array.from(this.user2rating.values());\n    ratingAndUsername.sort((a, b) => {\n      if (a.rating != b.rating) return b.rating - a.rating;\n      else if (a.username < b.username) return -1;\n      else return 1;\n    });\n    return ratingAndUsername;\n  }\n}\n","import React from 'react';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport { formatDate, getOrdinal } from '../../utils';\nimport { getColor, RatingRanks } from '../../utils/Rating';\n\ninterface Props {\n  paramUser: string;\n  ratingHistory: RatingHistoryEntry[];\n  ratingRanks: RatingRanks;\n}\n\nexport const UserInfoTable: React.FC<Props> = (props) => {\n  const { paramUser, ratingHistory, ratingRanks } = props;\n  if (ratingHistory.length === 0) {\n    return <></>;\n  }\n  const lastResult = ratingHistory[ratingHistory.length - 1];\n  const lastCompeted = new Date(lastResult.EndTime * 1000);\n  const rank = ratingRanks.getRank(paramUser);\n  const ratingColor = getColor(lastResult.NewRating)[1];\n\n  return (\n    <>\n      <h3 style={{ fontSize: '24px' }}>Contest Status</h3>\n      <hr />\n      <table className=\"dl-table\" style={{ fontSize: '14px' }}>\n        <tr>\n          <th className=\"no-break\">Name</th>\n          <td>{paramUser}</td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Rank</th>\n          <td>{getOrdinal(rank)}</td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Rating</th>\n          <td>\n            <span style={{ color: ratingColor }}>{lastResult.NewRating}</span>\n          </td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Rated Matches</th>\n          <td>{ratingHistory.length}</td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Last Competed</th>\n          <td>{formatDate(lastCompeted)}</td>\n        </tr>\n      </table>\n    </>\n  );\n};\n","import { Contest } from '../interfaces/Contest';\nimport { RatingHistoryEntryEx } from '../interfaces/RatingHistoryEntry';\n\nlet CONTESTS: Contest[] | undefined = undefined;\nexport const fetchContests = async (): Promise<Contest[]> =>\n  CONTESTS === undefined\n    ? fetch(`${process.env.PUBLIC_URL}/json/contests/contests.json`)\n        .catch((e) => {\n          throw Error(e);\n        })\n        .then(async (r) => {\n          CONTESTS = (await r.json()) as Contest[];\n          return CONTESTS;\n        })\n    : Promise.resolve(CONTESTS);\n\nexport type ContestResults = { [key: string]: RatingHistoryEntryEx };\nconst CONTEST_RESULTS_MAP: Map<string, ContestResults> = new Map<\n  string,\n  ContestResults\n>();\nexport const fetchContestResults = async (\n  contest?: string\n): Promise<ContestResults | undefined> =>\n  contest !== undefined && contest.length > 0 && contest.startsWith('ahc')\n    ? !CONTEST_RESULTS_MAP.has(contest)\n      ? fetch(`${process.env.PUBLIC_URL}/json/results/${contest}.json`)\n          .catch((e) => {\n            throw Error(e);\n          })\n          .then(async (r) => {\n            const submissions = (await r.json()) as ContestResults;\n            CONTEST_RESULTS_MAP.set(contest, submissions);\n            return submissions;\n          })\n      : Promise.resolve(CONTEST_RESULTS_MAP.get(contest) as ContestResults)\n    : Promise.resolve(undefined);\n","import * as PIXI from 'pixi.js';\nimport { SmoothGraphics as Graphics } from '@pixi/graphics-smooth';\n\nexport const newGraphics = (\n  parent: PIXI.Graphics | PIXI.Container\n): Graphics => {\n  const s = new Graphics();\n  parent.addChild(s);\n  return s;\n};\n\nexport const newText = (\n  parent: PIXI.Container,\n  x: number,\n  y: number,\n  font: string,\n  fontSize: number\n): PIXI.Text => {\n  const t = new PIXI.Text(\n    '',\n    new PIXI.TextStyle({\n      fontFamily: font,\n      fontSize: fontSize,\n      fill: 0x000000,\n    })\n  );\n  t.x = x;\n  t.y = y;\n  t.anchor.x = 0.5;\n  t.anchor.y = 0.5;\n  parent.addChild(t);\n  return t;\n};\n","import * as PIXI from 'pixi.js';\nimport { newGraphics, newText } from '../../utils/Shape';\nimport { getColor, getRatingPer } from '../../utils/Rating';\nimport { RatingHistoryEntryEx } from '../../interfaces/RatingHistoryEntry';\nimport { getOrdinal } from '../../utils';\nimport { SmoothGraphics as Graphics } from '@pixi/graphics-smooth';\nimport { ChartCanvasMode } from './ChartCanvas';\n\nexport const LABEL_FONT_FAMILY = 'Lato';\nexport const RATING_FONT_FAMILY = 'Squada One';\n\nconst OFFSET_X = 50;\nconst OFFSET_Y = 5;\nconst STATUS_WIDTH = 640 - OFFSET_X - 10;\nconst STATUS_HEIGHT = 80 - OFFSET_Y - 5;\n\nconst STAR_MIN = 3200;\nconst PARTICLE_MIN = 3;\nconst PARTICLE_MAX = 20;\nconst LIFE_MAX = 30;\n\n/**\n * 増減値を文字列に変換する\n * @param x 増減値\n * @returns 増減値を表す文字列\n */\nconst getDiff = (x: number): string => {\n  const sign = x === 0 ? '±' : x < 0 ? '-' : '+';\n  return `${sign}${Math.abs(x)}`;\n};\n\nclass Particle {\n  object: PIXI.Text;\n  angle: number;\n  speed: number;\n  velocityX: number;\n  velocityY: number;\n  rotateSpeed: number;\n  life: number;\n  initialX: number;\n  initialY: number;\n\n  constructor(statusContainer: PIXI.Container, x: number, y: number) {\n    this.initialX = x;\n    this.initialY = y;\n    this.object = newText(statusContainer, 0, 0, LABEL_FONT_FAMILY, 64);\n    this.angle = 0;\n    this.speed = 0;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.rotateSpeed = 0;\n    this.life = 0;\n    this.object.x = this.initialX;\n    this.object.y = this.initialY;\n  }\n\n  set(color: number, alpha: number, useStar: boolean) {\n    this.object.x = this.initialX;\n    this.object.y = this.initialY;\n    this.angle = Math.random() * Math.PI * 2;\n    this.speed = Math.random() * 4 + 4;\n    this.velocityX = Math.cos(this.angle) * this.speed;\n    this.velocityY = Math.sin(this.angle) * this.speed;\n    this.rotateSpeed = Math.random() * 20 + 10;\n    this.life = LIFE_MAX;\n    this.object.visible = true;\n    this.object.style.fill = color;\n    this.object.text = useStar ? '★' : '@';\n    this.object.alpha = alpha;\n  }\n\n  disable() {\n    this.life = 0;\n    this.object.visible = false;\n  }\n\n  update() {\n    if (this.life <= 0) {\n      this.object.visible = false;\n      return;\n    }\n    this.object.x += this.velocityX;\n    this.velocityX *= 0.9;\n    this.object.y += this.velocityY;\n    this.velocityY *= 0.9;\n    this.life--;\n    this.object.scale.x = this.object.scale.y = this.life / LIFE_MAX;\n    this.object.rotation += this.rotateSpeed;\n  }\n}\n\nclass Particles {\n  particles: Particle[];\n\n  constructor(statusContainer: PIXI.Container, x: number, y: number) {\n    this.particles = [];\n    for (let i = 0; i < PARTICLE_MAX; ++i) {\n      this.particles.push(new Particle(statusContainer, x, y));\n    }\n  }\n\n  set(num: number, color: number, alpha: number, rating: number) {\n    const useStar = rating >= STAR_MIN;\n    this.particles.forEach((particle, index) => {\n      if (index < num) {\n        particle.set(color, alpha, useStar);\n      } else {\n        particle.disable();\n      }\n    });\n  }\n\n  update() {\n    this.particles.forEach((particle) => {\n      if (particle.life > 0) {\n        particle.update();\n      }\n    });\n  }\n}\n\nexport class StatusCanvas {\n  app: PIXI.Application;\n  statusContainer?: PIXI.Container;\n  borderGraphics!: Graphics;\n  ratingText!: PIXI.Text;\n  placeText!: PIXI.Text;\n  diffText!: PIXI.Text;\n  dateText!: PIXI.Text;\n  contestNameText!: PIXI.Text;\n\n  particles?: Particles;\n  standingsUrl: string;\n\n  mode: ChartCanvasMode;\n\n  constructor(app: PIXI.Application, mode: ChartCanvasMode) {\n    this.app = app;\n    this.statusContainer = undefined;\n    this.standingsUrl = '';\n    this.mode = mode;\n\n    this.app.ticker.maxFPS = 60;\n    this.app.ticker.add(() => {\n      this.animate();\n    });\n  }\n\n  destroy(): void {\n    if (this.statusContainer) {\n      this.statusContainer.destroy({\n        children: true,\n        texture: true,\n        baseTexture: true,\n      });\n      this.statusContainer = undefined;\n    }\n  }\n\n  init(): void {\n    this.destroy();\n    this.statusContainer = new PIXI.Container();\n    void this.app.stage.addChild(this.statusContainer);\n\n    this.borderGraphics = newGraphics(this.statusContainer);\n    this.ratingText = newText(\n      this.statusContainer,\n      OFFSET_X + 75,\n      OFFSET_Y + STATUS_HEIGHT / 2,\n      RATING_FONT_FAMILY,\n      48\n    );\n    this.placeText = newText(\n      this.statusContainer,\n      OFFSET_X + 160,\n      OFFSET_Y + STATUS_HEIGHT / 2.7,\n      LABEL_FONT_FAMILY,\n      16\n    );\n    this.diffText = newText(\n      this.statusContainer,\n      OFFSET_X + 160,\n      OFFSET_Y + STATUS_HEIGHT / 1.5,\n      LABEL_FONT_FAMILY,\n      11\n    );\n    this.diffText.style.fill = 0x888888;\n    this.dateText = newText(\n      this.statusContainer,\n      OFFSET_X + 200,\n      OFFSET_Y + STATUS_HEIGHT / 4,\n      LABEL_FONT_FAMILY,\n      14\n    );\n    this.contestNameText = newText(\n      this.statusContainer,\n      OFFSET_X + 200,\n      OFFSET_Y + STATUS_HEIGHT / 1.6,\n      LABEL_FONT_FAMILY,\n      20\n    );\n    this.dateText.anchor.x = 0.0;\n    this.contestNameText.anchor.x = 0.0;\n    if (this.contestNameText.width > STATUS_WIDTH - 200 - 10) {\n      this.contestNameText.scale.x =\n        (STATUS_WIDTH - 200 - 10) / this.contestNameText.width;\n    }\n\n    this.contestNameText.interactive = true;\n    this.contestNameText.cursor = 'pointer';\n    this.contestNameText.on('click', () => {\n      window.location.href = this.standingsUrl;\n    });\n\n    this.particles = new Particles(\n      this.statusContainer,\n      this.ratingText.x,\n      this.ratingText.y\n    );\n  }\n\n  set(data: RatingHistoryEntryEx, particle_flag: boolean): void {\n    if (!this.particles) return;\n    const date = new Date(data.EndTime * 1000);\n    const rating = this.mode === 'Rating' ? data.NewRating : data.performance;\n    const old_rating: number | null =\n      this.mode === 'Rating' ? data.OldRating : null;\n    const place = data.Place;\n    const contest_name = data.ContestName;\n    const tmp = getColor(rating);\n    const color = tmp[3],\n      alpha = tmp[2];\n    this.borderGraphics\n      .clear()\n      .lineStyle(1.0, color)\n      .drawRoundedRect(OFFSET_X, OFFSET_Y, STATUS_WIDTH, STATUS_HEIGHT, 2);\n    this.ratingText.text = String(rating);\n    this.ratingText.style.fill = color;\n    this.placeText.text = getOrdinal(place);\n    this.diffText.text =\n      old_rating !== null ? getDiff(rating - old_rating) : '-';\n    this.dateText.text = date.toLocaleDateString();\n    this.contestNameText.text = contest_name;\n    this.contestNameText.scale.x = 1.0;\n    if (this.contestNameText.width > STATUS_WIDTH - 200 - 10) {\n      this.contestNameText.scale.x =\n        (STATUS_WIDTH - 200 - 10) / this.contestNameText.width;\n    }\n    if (particle_flag) {\n      const particleNum = Math.floor(\n        Math.pow(getRatingPer(rating), 2) * (PARTICLE_MAX - PARTICLE_MIN) +\n          PARTICLE_MIN\n      );\n      this.particles.set(particleNum, color, alpha, rating);\n    }\n    this.standingsUrl = data.StandingsUrl;\n  }\n\n  animate(): void {\n    if (!this.particles) return;\n    this.particles.update();\n  }\n}\n","import * as PIXI from 'pixi.js';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { getPer } from '../../utils';\nimport { newGraphics } from '../../utils/Shape';\nimport { getColor } from '../../utils/Rating';\nimport { SmoothGraphics as Graphics } from '@pixi/graphics-smooth';\n\nconst OFFSET_X = 40;\nconst OFFSET_Y = 20;\nconst MARGIN_Y_PER = 1.1;\nconst STEP = 20;\nconst PANEL_WIDTH = 640 - OFFSET_X - 12;\nconst PANEL_HEIGHT = 480 - OFFSET_Y - 30;\n\n// additional\nconst LABEL_FONT_FAMILY = 'Lato';\n\nexport class RatingDistributionChartCanvas {\n  app: PIXI.Application;\n  chartContainer?: PIXI.Container;\n  chartGraphics?: Graphics;\n  labelTextStyle!: PIXI.TextStyle;\n\n  n!: number;\n  xaxis!: number[];\n  data!: number[];\n  rating!: number;\n\n  yMax!: number;\n\n  lineGraphics?: Graphics;\n  ratingText?: PIXI.Text;\n\n  constructor(app: PIXI.Application) {\n    this.app = app;\n    this.chartContainer = undefined;\n    // void this.init();\n  }\n\n  destroy(): void {\n    if (this.chartContainer) {\n      this.chartContainer.destroy({\n        children: true,\n        texture: true,\n        baseTexture: true,\n      });\n      this.chartContainer = undefined;\n    }\n  }\n\n  init(xaxis: number[], data: number[], rating: number): void {\n    this.destroy();\n    this.chartContainer = new PIXI.Container();\n    void this.app.stage.addChild(this.chartContainer);\n\n    if (data.length !== xaxis.length) {\n      throw new Error('長さ不一致');\n    }\n    this.xaxis = xaxis;\n    this.data = data;\n    this.rating = rating;\n\n    this.n = data.length;\n    if (this.n == 0) return;\n    this.xaxis.push(this.xaxis[this.n - 1] + 100);\n\n    this.yMax =\n      this.data.reduce((prev, curr) => Math.max(prev, curr), 0) * MARGIN_Y_PER;\n\n    this.labelTextStyle = new PIXI.TextStyle({\n      fontFamily: LABEL_FONT_FAMILY,\n      fontSize: 12,\n      fill: 0x000000,\n    });\n\n    void this.initBackground();\n    void this.initChart();\n  }\n\n  initBackground(): void {\n    if (this.chartContainer === undefined) return;\n\n    const panelGraphics = newGraphics(this.chartContainer);\n    panelGraphics.x = OFFSET_X;\n    panelGraphics.y = OFFSET_Y;\n    panelGraphics.alpha = 0.3;\n    const borderGraphics = newGraphics(this.chartContainer);\n    borderGraphics.x = OFFSET_X;\n    borderGraphics.y = OFFSET_Y;\n\n    const newLabelY = (s: string, y: number): PIXI.Text => {\n      const t = new PIXI.Text(s, this.labelTextStyle);\n      t.x = OFFSET_X - 10;\n      t.y = OFFSET_Y + y;\n      t.anchor.x = 1.0;\n      t.anchor.y = 0.5;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    const newLabelX = (s: string, x: number): PIXI.Text => {\n      const t = new PIXI.Text(\n        s,\n        new PIXI.TextStyle({\n          fontFamily: LABEL_FONT_FAMILY,\n          fontSize: 10,\n          fill: 0x000000,\n        })\n      );\n      t.x = OFFSET_X + x;\n      t.y = OFFSET_Y + PANEL_HEIGHT + 3;\n      t.anchor.x = 0.0;\n      t.anchor.y = 0.5;\n      t.angle = 90;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    // y 軸ラベルとグリッド線を追加する\n    borderGraphics.lineStyle(1.0, 0xdddddd);\n    for (let i = STEP; i < this.yMax; i += STEP) {\n      const y = PANEL_HEIGHT - PANEL_HEIGHT * getPer(i, 0, this.yMax);\n      borderGraphics.moveTo(0, y).lineTo(PANEL_WIDTH, y);\n      newLabelY(String(i), y);\n    }\n\n    // x 軸ラベルを追加する\n    for (let i = 0; i < this.n; i += 2) {\n      const x = PANEL_WIDTH * getPer(i, 0, this.n);\n      newLabelX(String(this.xaxis[i]), x);\n    }\n\n    borderGraphics\n      .lineStyle(1.5, 0x888888)\n      .drawRoundedRect(0, 0, PANEL_WIDTH, PANEL_HEIGHT, 2);\n  }\n\n  newText(\n    parent: Graphics,\n    x: number,\n    y: number,\n    font: PIXI.TextStyle\n  ): PIXI.Text {\n    const t = new PIXI.Text('', font);\n    t.x = x;\n    t.y = y;\n    t.anchor.x = 0.5;\n    t.anchor.y = 0.5;\n    parent.addChild(t);\n    return t;\n  }\n\n  initChart(): void {\n    if (this.chartContainer === undefined) return;\n\n    this.chartGraphics = newGraphics(this.chartContainer);\n    const dropShadowFilter = new DropShadowFilter();\n    dropShadowFilter.color = 0x000000;\n    dropShadowFilter.alpha = 0.3;\n    dropShadowFilter.distance = Math.hypot(1, 2);\n    dropShadowFilter.angle = Math.atan2(1, 2);\n    dropShadowFilter.blur = 3;\n    this.chartGraphics.filters = [dropShadowFilter];\n\n    // マウスオーバー時に表示する線と数字を用意する\n    const countText = this.newText(\n      this.chartGraphics,\n      0,\n      0,\n      new PIXI.TextStyle({\n        fontFamily: LABEL_FONT_FAMILY,\n        fontSize: 10,\n        fill: 0x000000,\n      })\n    );\n    countText.visible = false;\n    const countGraphics = newGraphics(this.chartContainer);\n    countGraphics\n      .lineStyle(1.0, 0xdddddd)\n      .moveTo(0, 20)\n      .lineTo(0, PANEL_HEIGHT);\n    countGraphics.y = OFFSET_Y;\n    countGraphics.visible = false;\n    const mouseover = (i: number): void => {\n      const x = OFFSET_X + PANEL_WIDTH * getPer(i + 0.5, 0, this.n);\n      countText.text = `${this.data[i]}`;\n      countText.style.fill = getColor(this.xaxis[i])[1];\n      countText.x = x;\n      countText.y = OFFSET_Y + 10;\n      countGraphics.x = x;\n      countText.visible = true;\n      countGraphics.visible = true;\n    };\n    const mouseout = (): void => {\n      countText.visible = false;\n      countGraphics.visible = false;\n    };\n\n    // ヒストグラム本体を描画する\n    for (let i = 0; i < this.n; ++i) {\n      const histogramGraphics = newGraphics(this.chartGraphics);\n\n      const rectHeight = PANEL_HEIGHT * getPer(this.data[i], 0, this.yMax);\n\n      const x0 = Math.floor(OFFSET_X + PANEL_WIDTH * getPer(i, 0, this.n));\n      const x1 = Math.floor(OFFSET_X + PANEL_WIDTH * getPer(i + 1, 0, this.n));\n      histogramGraphics.x = x0;\n      histogramGraphics.y = OFFSET_Y + PANEL_HEIGHT - rectHeight;\n      histogramGraphics\n        .lineStyle(0.5, 0xffffff)\n        .beginFill(getColor(this.xaxis[i])[3])\n        .drawRect(0, 0, x1 - x0 - 1, rectHeight);\n\n      const hitAreaRect = new PIXI.Rectangle(\n        0,\n        +rectHeight - PANEL_HEIGHT,\n        PANEL_WIDTH / this.n,\n        PANEL_HEIGHT\n      );\n      histogramGraphics.hitArea = hitAreaRect;\n      histogramGraphics.interactive = true;\n      histogramGraphics.on('mouseover', () => {\n        mouseover(i);\n      });\n      histogramGraphics.on('mouseout', () => {\n        mouseout();\n      });\n    }\n\n    // ユーザのレーティングを表す線を描画する\n    void this.initUserRatingLine(this.rating);\n  }\n\n  getXandColor(rating: number): [number, number] {\n    let x = PANEL_WIDTH;\n    let col = 0x000000;\n    for (let i = this.n - 1; i >= 0; i--) {\n      if (this.xaxis[i] <= rating) {\n        const per = getPer(rating + 0.5, this.xaxis[i], this.xaxis[i + 1]);\n        x = PANEL_WIDTH * getPer(i + per, 0, this.n);\n        col = getColor(this.xaxis[i])[3];\n        break;\n      }\n    }\n    return [x, col];\n  }\n\n  initUserRatingLine(rating: number): void {\n    if (this.chartContainer === undefined) return;\n    if (this.chartGraphics === undefined) return;\n\n    const [x, col] = this.getXandColor(rating);\n    this.lineGraphics = newGraphics(this.chartContainer);\n    this.lineGraphics\n      .lineStyle(1.0, 0x000000)\n      .moveTo(0, 0)\n      .lineTo(0, PANEL_HEIGHT);\n    this.lineGraphics.x = OFFSET_X + x;\n    this.lineGraphics.y = OFFSET_Y;\n    this.ratingText = this.newText(\n      this.chartGraphics,\n      OFFSET_X + x,\n      12,\n      new PIXI.TextStyle({\n        fontFamily: LABEL_FONT_FAMILY,\n        fontSize: 11,\n        fill: col,\n      })\n    );\n    this.ratingText.text = String(rating);\n  }\n\n  updateUserRatingLine(rating: number): void {\n    this.rating = rating;\n    if (this.lineGraphics === undefined) return;\n    if (this.ratingText === undefined) return;\n\n    this.lineGraphics.x = OFFSET_X + this.getXandColor(rating)[0];\n    this.ratingText.text = String(rating);\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport useFontFaceObserver from 'use-font-face-observer';\nimport * as PIXI from 'pixi.js';\nimport { LABEL_FONT_FAMILY, RATING_FONT_FAMILY } from './StatusCanvas';\nimport { RatingDistributionChartCanvas } from './RatingDistributionChartCanvas';\n\ninterface Props {\n  xaxis: number[];\n  data: number[];\n  rating: number;\n}\n\nexport const RatingDistributionGraph: React.FC<Props> = (props) => {\n  const { xaxis, data, rating } = props;\n  const isFontListLoaded = useFontFaceObserver([\n    { family: RATING_FONT_FAMILY },\n    { family: LABEL_FONT_FAMILY },\n  ]);\n  const chartCanvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [canvas, setCanvas] = useState<RatingDistributionChartCanvas>();\n\n  useEffect(() => {\n    const chartCanvas: HTMLCanvasElement | null = chartCanvasRef.current;\n    if (chartCanvas === null) return;\n\n    const _chartApp = new PIXI.Application({\n      width: 640,\n      height: 480,\n      view: chartCanvas,\n      antialias: true,\n    });\n    _chartApp.renderer.backgroundColor = 0xffffff;\n\n    const _chartCanvas = new RatingDistributionChartCanvas(_chartApp);\n    setCanvas(_chartCanvas);\n  }, []);\n\n  useEffect(() => {\n    if (!isFontListLoaded) return;\n    if (!data) return;\n    if (!canvas) return;\n\n    if (data.length === 0) {\n      canvas.destroy();\n      return;\n    }\n    canvas.init(xaxis, data, rating);\n  }, [isFontListLoaded, data, canvas]);\n\n  return (\n    <>\n      <div>\n        <canvas\n          style={{\n            margin: '0px auto',\n            maxWidth: '640px',\n            maxHeight: '480px',\n            height: '100%',\n            width: '100%',\n            display: 'block',\n          }}\n          ref={chartCanvasRef}\n          width=\"640\"\n          height=\"480\"\n        ></canvas>\n      </div>\n    </>\n  );\n};\n","import * as PIXI from 'pixi.js';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { StatusCanvas } from './StatusCanvas';\nimport { getPer } from '../../utils';\nimport { newGraphics } from '../../utils/Shape';\nimport { SmoothGraphics as Graphics } from '@pixi/graphics-smooth';\nimport { COLORS, STEP_SIZE, getColor } from '../../utils/Rating';\nimport { RatingHistoryEntryEx } from '../../interfaces/RatingHistoryEntry';\n\nconst MARGIN_VAL_X = 86400 * 30;\nconst MARGIN_VAL_Y_LOW = 100;\nconst MARGIN_VAL_Y_HIGH = 300;\nconst OFFSET_X = 50;\nconst OFFSET_Y = 5;\nconst PANEL_WIDTH = 640 - OFFSET_X - 10;\nconst PANEL_HEIGHT = 360 - OFFSET_Y - 30;\nconst HIGHEST_WIDTH = 80;\nconst HIGHEST_HEIGHT = 20;\nconst START_YEAR = 2010;\nconst MONTH_NAMES = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\nconst YEAR_SEC = 86400 * 365;\n\n// additional\nconst LABEL_FONT_FAMILY = 'Lato';\n\nconst MODES = ['Rating', 'Performance'] as const;\nexport type ChartCanvasMode = typeof MODES[number];\n\nexport class ChartCanvas {\n  app: PIXI.Application;\n  chartContainer?: PIXI.Container;\n  x_min!: number;\n  x_max!: number;\n  y_min!: number;\n  y_max!: number;\n  labelTextStyle!: PIXI.TextStyle;\n  R!: number;\n  mode: ChartCanvasMode;\n\n  constructor(app: PIXI.Application, mode: ChartCanvasMode) {\n    this.app = app;\n    this.chartContainer = undefined;\n    this.mode = mode;\n    // void this.init();\n  }\n\n  destroy(): void {\n    if (this.chartContainer) {\n      this.chartContainer.destroy({\n        children: true,\n        texture: true,\n        baseTexture: true,\n      });\n      this.chartContainer = undefined;\n    }\n  }\n\n  getRating(ratingHistoryEntry: RatingHistoryEntryEx): number {\n    if (this.mode === 'Rating') return ratingHistoryEntry.NewRating;\n    else return ratingHistoryEntry.performance;\n  }\n\n  init(\n    ratingHistory: RatingHistoryEntryEx[],\n    statusCanvas: StatusCanvas\n  ): void {\n    this.destroy();\n    this.chartContainer = new PIXI.Container();\n    void this.app.stage.addChild(this.chartContainer);\n\n    this.R = 1.0;\n\n    this.x_min = 100000000000;\n    this.x_max = 0;\n    this.y_min = 10000;\n    this.y_max = 0;\n    ratingHistory.forEach((ratingHistoryEntry) => {\n      this.x_min = Math.min(this.x_min, ratingHistoryEntry.EndTime);\n      this.x_max = Math.max(this.x_max, ratingHistoryEntry.EndTime);\n      const rating = this.getRating(ratingHistoryEntry);\n      this.y_min = Math.min(this.y_min, rating);\n      this.y_max = Math.max(this.y_max, rating);\n    });\n    this.x_min -= MARGIN_VAL_X;\n    this.x_max += MARGIN_VAL_X;\n    this.y_min = Math.min(1500, Math.max(0, this.y_min - MARGIN_VAL_Y_LOW));\n    this.y_max += MARGIN_VAL_Y_HIGH;\n\n    this.labelTextStyle = new PIXI.TextStyle({\n      fontFamily: LABEL_FONT_FAMILY,\n      fontSize: 12 * this.R,\n      fill: 0x000000,\n    });\n\n    void this.initBackground();\n    void this.initChart(ratingHistory, statusCanvas);\n  }\n\n  initBackground(): void {\n    if (this.chartContainer === undefined) return;\n\n    const panelGraphics = new Graphics();\n    panelGraphics.x = OFFSET_X * this.R;\n    panelGraphics.y = OFFSET_Y * this.R;\n    panelGraphics.alpha = 0.3;\n    const borderGraphics = new Graphics();\n    borderGraphics.x = OFFSET_X * this.R;\n    borderGraphics.y = OFFSET_Y * this.R;\n\n    void this.chartContainer.addChild(panelGraphics);\n    void this.chartContainer.addChild(borderGraphics);\n\n    // 背景色を塗る\n    let y1 = 0;\n    for (let i = COLORS.length - 1; i >= 0; i--) {\n      const y2 =\n        PANEL_HEIGHT -\n        PANEL_HEIGHT * getPer(COLORS[i][0], this.y_min, this.y_max);\n      if (y2 > 0 && y1 < PANEL_HEIGHT) {\n        y1 = Math.max(y1, 0);\n        panelGraphics\n          .beginFill(COLORS[i][3])\n          .drawRect(\n            0,\n            y1 * this.R,\n            PANEL_WIDTH * this.R,\n            (Math.min(y2, PANEL_HEIGHT) - y1) * this.R\n          )\n          .endFill();\n      }\n      y1 = y2;\n    }\n\n    const newLabelY = (s: string, y: number): PIXI.Text => {\n      const t = new PIXI.Text(s, this.labelTextStyle);\n      t.x = (OFFSET_X - 10) * this.R;\n      t.y = (OFFSET_Y + y) * this.R;\n      t.anchor.x = 1.0;\n      t.anchor.y = 0.5;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    const newLabelX = (s: string, x: number, y: number): PIXI.Text => {\n      const t = new PIXI.Text(s, this.labelTextStyle);\n      t.x = (OFFSET_X + x) * this.R;\n      t.y = (OFFSET_Y + PANEL_HEIGHT + 2 + y) * this.R;\n      t.anchor.x = 0.5;\n      t.anchor.y = 0.0;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    // y 軸ラベルとグリッド線を追加する\n    for (let i = 0; i <= this.y_max; i += STEP_SIZE) {\n      if (i >= this.y_min) {\n        const y =\n          PANEL_HEIGHT - PANEL_HEIGHT * getPer(i, this.y_min, this.y_max);\n        void newLabelY(String(i), y);\n        borderGraphics.lineStyle(1.0 * this.R, 0xffffff);\n        if (i === 2000) borderGraphics.lineStyle(1.0 * this.R, 0x000000);\n        borderGraphics\n          .moveTo(0, y * this.R)\n          .lineTo(PANEL_WIDTH * this.R, y * this.R);\n      }\n    }\n    borderGraphics.lineStyle(1.0 * this.R, 0xffffff);\n\n    // x 軸ラベルとグリッド線を追加する\n    let month_step = 6;\n    for (let i = 3; i >= 1; i--) {\n      if (this.x_max - this.x_min <= YEAR_SEC * i + MARGIN_VAL_X * 2)\n        month_step = i;\n    }\n    let isFirst = true;\n    for (let i = START_YEAR; i < 3000; i++) {\n      let isEnded = false;\n      for (let j = 0; j < 12; j += month_step) {\n        const month = `0${j + 1}`.slice(-2);\n        const unix = Date.parse(`${i}-${month}-01T00:00:00`) / 1000;\n        if (this.x_min < unix && unix < this.x_max) {\n          const x = PANEL_WIDTH * getPer(unix, this.x_min, this.x_max);\n          if (j === 0 || isFirst) {\n            void newLabelX(MONTH_NAMES[j], x, 0);\n            void newLabelX(String(i), x, 13);\n            isFirst = false;\n          } else {\n            void newLabelX(MONTH_NAMES[j], x, 0);\n          }\n          borderGraphics\n            .moveTo(x * this.R, 0)\n            .lineTo(x * this.R, PANEL_HEIGHT * this.R);\n        }\n        if (unix > this.x_max) {\n          isEnded = true;\n          break;\n        }\n      }\n      if (isEnded) break;\n    }\n    borderGraphics\n      .lineStyle(1.5 * this.R, 0x888888)\n      .drawRoundedRect(\n        0,\n        0,\n        PANEL_WIDTH * this.R,\n        PANEL_HEIGHT * this.R,\n        2 * this.R\n      );\n  }\n\n  initChart(\n    ratingHistory: RatingHistoryEntryEx[],\n    statusGraphics: StatusCanvas\n  ): void {\n    if (this.chartContainer === undefined) return;\n\n    const chartGraphics = new Graphics();\n    this.chartContainer.addChild(chartGraphics);\n    // chart_container.shadow = new cj.Shadow(\"rgba(0,0,0,0.3)\", 1, 2, 3);\n    const dropShadowFilter = new DropShadowFilter();\n    dropShadowFilter.color = 0x000000;\n    dropShadowFilter.alpha = 0.3;\n    dropShadowFilter.distance = Math.hypot(1, 2) * this.R;\n    dropShadowFilter.angle = Math.atan2(1, 2);\n    dropShadowFilter.blur = 3 * this.R;\n    chartGraphics.filters = [dropShadowFilter];\n\n    const lineGraphics = newGraphics(chartGraphics);\n    const highestGraphics = newGraphics(chartGraphics);\n    highestGraphics.interactive = true;\n\n    const mouseoverVertex = (i: number): void => {\n      vertexGraphics[i].scale.x = vertexGraphics[i].scale.y = 1.2;\n      statusGraphics.set(ratingHistory[i], true);\n    };\n\n    const mouseoutVertex = (i: number): void => {\n      vertexGraphics[i].scale.x = vertexGraphics[i].scale.y = 1;\n    };\n    const { argmax: highestIdx } = ratingHistory.reduce(\n      ({ argmax, maxRating }, ratingHistoryEntry, index) => {\n        const rating = this.getRating(ratingHistoryEntry);\n        if (rating > maxRating) {\n          argmax = index;\n          maxRating = rating;\n        }\n        return { argmax, maxRating };\n      },\n      { argmax: 0, maxRating: 0 }\n    );\n\n    const vertexGraphics = ratingHistory.map((ratingHistoryEntry, index) => {\n      const vertex = newGraphics(chartGraphics);\n      vertex.lineStyle(1.0 * this.R, 0xffffff);\n      if (index === highestIdx) vertex.lineStyle(1.0 * this.R, 0x000000);\n      const rating = this.getRating(ratingHistoryEntry);\n      vertex.beginFill(getColor(rating)[3]).drawCircle(0, 0, 3.5 * this.R);\n      vertex.x =\n        (OFFSET_X +\n          PANEL_WIDTH *\n            getPer(ratingHistoryEntry.EndTime, this.x_min, this.x_max)) *\n        this.R;\n      vertex.y =\n        (OFFSET_Y +\n          (PANEL_HEIGHT -\n            PANEL_HEIGHT * getPer(rating, this.y_min, this.y_max))) *\n        this.R;\n      vertex.interactive = true;\n      vertex.on('mouseover', () => {\n        mouseoverVertex(index);\n      });\n      vertex.on('mouseout', () => {\n        mouseoutVertex(index);\n      });\n      return vertex;\n    });\n    {\n      let dx = 80 * this.R;\n      if ((this.x_min + this.x_max) / 2 < ratingHistory[highestIdx].EndTime)\n        dx = -80 * this.R;\n      const x = vertexGraphics[highestIdx].x + dx;\n      const y = vertexGraphics[highestIdx].y - 16;\n      highestGraphics\n        .lineStyle(1.0 * this.R, 0xffffff)\n        .moveTo(vertexGraphics[highestIdx].x, vertexGraphics[highestIdx].y)\n        .lineTo(x, y);\n      highestGraphics\n        .lineStyle(1.0 * this.R, 0x888888)\n        .beginFill(0xffffff)\n        .drawRoundedRect(\n          x - (HIGHEST_WIDTH / 2) * this.R,\n          y - (HIGHEST_HEIGHT / 2) * this.R,\n          HIGHEST_WIDTH * this.R,\n          HIGHEST_HEIGHT * this.R,\n          2 * this.R\n        );\n      const highest_text = new PIXI.Text(\n        `Highest: ${this.getRating(ratingHistory[highestIdx])}`,\n        this.labelTextStyle\n      );\n      highest_text.x = x;\n      highest_text.y = y;\n      highest_text.anchor.x = 0.5;\n      highest_text.anchor.y = 0.5;\n      this.chartContainer.addChild(highest_text);\n\n      highestGraphics.on('mouseover', () => {\n        mouseoverVertex(highestIdx);\n      });\n      highestGraphics.on('mouseout', () => {\n        mouseoutVertex(highestIdx);\n      });\n    }\n    // 折れ線を描画\n    (\n      [\n        [2.0, 0xaaaaaa],\n        [1.0, 0xffffff],\n      ] as [number, number][]\n    ).forEach(([width, color]) => {\n      lineGraphics.lineStyle(width * this.R, color);\n      lineGraphics.moveTo(vertexGraphics[0].x, vertexGraphics[0].y);\n      vertexGraphics.forEach((vertex) => {\n        lineGraphics.lineTo(vertex.x, vertex.y);\n      });\n    });\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport useFontFaceObserver from 'use-font-face-observer';\nimport * as PIXI from 'pixi.js';\nimport { RatingHistoryEntryEx } from '../../interfaces/RatingHistoryEntry';\nimport { ChartCanvas, ChartCanvasMode } from './ChartCanvas';\nimport {\n  StatusCanvas,\n  LABEL_FONT_FAMILY,\n  RATING_FONT_FAMILY,\n} from './StatusCanvas';\n\ninterface Props {\n  ratingHistory?: RatingHistoryEntryEx[];\n  paramUser: string;\n  mode: ChartCanvasMode;\n}\n\nexport const RatingGraph: React.FC<Props> = (props) => {\n  const { ratingHistory, mode } = props;\n  const isFontListLoaded = useFontFaceObserver([\n    { family: RATING_FONT_FAMILY },\n    { family: LABEL_FONT_FAMILY },\n  ]);\n  const statusCanvasRef = useRef<HTMLCanvasElement | null>(null);\n  const chartCanvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [canvases, setCanvases] = useState<[StatusCanvas, ChartCanvas]>();\n\n  const R = 1.0;\n  useEffect(() => {\n    const statusCanvas: HTMLCanvasElement | null = statusCanvasRef.current;\n    const chartCanvas: HTMLCanvasElement | null = chartCanvasRef.current;\n    if (statusCanvas === null || chartCanvas === null) return;\n\n    const _statusApp = new PIXI.Application({\n      width: 640,\n      height: 80,\n      view: statusCanvas,\n      antialias: true,\n    });\n    const _chartApp = new PIXI.Application({\n      width: 640 * R,\n      height: 360 * R,\n      view: chartCanvas,\n      antialias: true,\n    });\n\n    _statusApp.renderer.backgroundColor = 0xffffff;\n    _chartApp.renderer.backgroundColor = 0xffffff;\n\n    const _statusCanvas = new StatusCanvas(_statusApp, mode);\n    const _chartCanvas = new ChartCanvas(_chartApp, mode);\n\n    // _statusCanvas.init();\n    setCanvases([_statusCanvas, _chartCanvas]);\n  }, []);\n\n  useEffect(() => {\n    if (!isFontListLoaded) return;\n    if (!ratingHistory) return;\n    if (!canvases) return;\n\n    const [statusCanvas, chartCanvas] = canvases;\n    if (ratingHistory.length === 0) {\n      chartCanvas.destroy();\n      statusCanvas.destroy();\n      return;\n    }\n    const lastHistory = ratingHistory[ratingHistory.length - 1];\n\n    statusCanvas.init();\n    chartCanvas.init(ratingHistory, statusCanvas);\n    statusCanvas.set(lastHistory, false);\n  }, [isFontListLoaded, ratingHistory, canvases]);\n\n  return (\n    <>\n      <div>\n        <canvas\n          style={{\n            margin: '0px auto',\n            maxWidth: '640px',\n            maxHeight: '80px',\n            height: '100%',\n            width: '100%',\n            display: 'block',\n          }}\n          ref={statusCanvasRef}\n          width=\"640\"\n          height=\"80\"\n        ></canvas>\n      </div>\n      <div>\n        <canvas\n          style={{\n            margin: '0px auto',\n            maxWidth: '640px',\n            maxHeight: '360px',\n            height: '100%',\n            width: '100%',\n            display: 'block',\n          }}\n          ref={chartCanvasRef}\n          width=\"640\"\n          height=\"360\"\n        ></canvas>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport useSWR from 'swr';\nimport { Alert } from 'reactstrap';\nimport { FormBlock } from './FormBlock';\nimport { UserInfoTable } from './UserInfoTable';\nimport { Contest } from '../../interfaces/Contest';\nimport { RatingHistoryEntryEx } from '../../interfaces/RatingHistoryEntry';\nimport {\n  ContestResults,\n  fetchContestResults,\n  fetchContests,\n} from '../../utils/Data';\nimport { RatingRanks } from '../../utils/Rating';\nimport { ChartSection } from './ChartSection';\n\ninterface Props {\n  match: {\n    params: {\n      user: string;\n    };\n  };\n}\n\nexport const RatingPage: React.FC<Props> = (props) => {\n  const paramUser: string = props.match.params.user ?? '';\n\n  const { data: contests, error: contestsError } = useSWR<Contest[], Error>(\n    '/json/contests/contests',\n    fetchContests\n  );\n  const { data: contestResultsArray, error: contestResultsArrayError } = useSWR<\n    (ContestResults | undefined)[],\n    Error\n  >(contests ? `/json/results/` : null, () => {\n    if (!contests) return Promise.resolve([undefined]);\n    const promises = contests.map((contest) =>\n      fetchContestResults(contest.slug)\n    );\n    return Promise.all(promises);\n  });\n\n  const ratingHistory =\n    paramUser && contestResultsArray\n      ? (contestResultsArray\n          .map((contestResults) => {\n            if (contestResults && paramUser in contestResults)\n              return contestResults[paramUser];\n            else return undefined;\n          })\n          .filter(\n            (contestResult) => contestResult !== undefined\n          ) as RatingHistoryEntryEx[])\n      : undefined;\n  const ratingRanks = new RatingRanks(contestResultsArray);\n\n  return (\n    <>\n      <h2>Description</h2>\n      <p>\n        AtCoder\n        で行われたマラソンコンテストのレーティング推移をグラフに表示します．\n      </p>\n      <p>\n        AtCoder\n        が公式にマラソンレートのグラフ表示機能を実装するまでのつなぎです．\n      </p>\n      <hr />\n\n      {contestsError ? (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          Failed to fetch contest list.\n        </Alert>\n      ) : contests === undefined ? (\n        <div\n          style={{\n            width: '100%',\n            height: '500px',\n            textAlign: 'center',\n            marginTop: '100px',\n            marginBottom: '100px',\n          }}\n        >\n          Fetch contest data...\n        </div>\n      ) : contestResultsArrayError ? (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          Failed to fetch contest results.\n        </Alert>\n      ) : contestResultsArray === undefined ? (\n        <div\n          style={{\n            width: '100%',\n            height: '500px',\n            textAlign: 'center',\n            marginTop: '100px',\n            marginBottom: '100px',\n          }}\n        >\n          Fetch contest results...\n        </div>\n      ) : (\n        <></>\n      )}\n      <FormBlock paramUser={paramUser} />\n      <hr />\n      {ratingHistory?.length ? (\n        <div\n          style={{ maxWidth: '640px', marginLeft: 'auto', marginRight: 'auto' }}\n        >\n          <UserInfoTable\n            paramUser={paramUser}\n            ratingHistory={ratingHistory}\n            ratingRanks={ratingRanks}\n          />\n          <ChartSection\n            paramUser={paramUser}\n            ratingHistory={ratingHistory}\n            ratingRanks={ratingRanks}\n          />\n        </div>\n      ) : (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          AtCoder ID is empty or invalid.\n        </Alert>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { PaginationOptions } from 'react-bootstrap-table-next';\nimport {\n  Col,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Row,\n} from 'reactstrap';\nimport { range } from '../utils';\nimport './pagination-panel.scss';\n\nconst pageList = (\n  currPage: number,\n  pageStartIndex: number,\n  totalPages: number\n): number[] => {\n  if (totalPages === 0) {\n    return [];\n  }\n  if (totalPages <= 10) {\n    return range(1, totalPages);\n  }\n\n  const pageNumbers = [currPage];\n  let tmpExp = 1;\n  for (;;) {\n    tmpExp *= 2;\n    const tmpPageNumber = currPage - tmpExp + 1;\n    if (tmpPageNumber < pageStartIndex) {\n      break;\n    }\n    pageNumbers.unshift(tmpPageNumber);\n  }\n  if (pageNumbers[0] !== pageStartIndex) {\n    pageNumbers.unshift(pageStartIndex);\n  }\n\n  tmpExp = 1;\n  for (;;) {\n    tmpExp *= 2;\n    const tmpPageNumber = currPage + tmpExp - 1;\n    if (tmpPageNumber > totalPages) {\n      break;\n    }\n    pageNumbers.push(tmpPageNumber);\n  }\n  if (pageNumbers.slice(-1)[0] !== totalPages) {\n    pageNumbers.push(totalPages);\n  }\n\n  return pageNumbers;\n};\n\ninterface PaginationChildProps extends PaginationOptions {\n  tableId?: string;\n  bootstrap4?: boolean;\n}\n\ninterface PaginationPanelProps extends PaginationChildProps {\n  renderSizePerPage: boolean;\n}\n\nexport const PaginationPanel: React.FC<PaginationPanelProps> = (props) => {\n  const {\n    renderSizePerPage,\n    totalSize,\n    sizePerPage,\n    sizePerPageList,\n    onSizePerPageChange,\n    page,\n    pageStartIndex,\n    onPageChange,\n  } = props;\n  if (\n    page === undefined ||\n    pageStartIndex === undefined ||\n    onPageChange === undefined ||\n    totalSize === undefined ||\n    sizePerPage === undefined ||\n    sizePerPageList === undefined ||\n    onSizePerPageChange === undefined\n  )\n    return null;\n  const totalPages = Math.ceil(totalSize / sizePerPage);\n  const pageNumbers = pageList(page, pageStartIndex, totalPages);\n\n  return (\n    <div className=\"pagination-panel-parent\">\n      {renderSizePerPage && (\n        <>\n          <Row>\n            <Col className=\"size-per-page\">\n              <span className=\"small\">\n                {'per page: '}\n                {(sizePerPageList as number[]).map((p) => (\n                  <a\n                    key={p}\n                    className={`standings-per-page${\n                      p === sizePerPage ? ' active' : ''\n                    }`}\n                    onClick={() => onSizePerPageChange(p, 1)}\n                  >\n                    {p}\n                  </a>\n                ))}\n              </span>\n            </Col>\n          </Row>\n          <hr className=\"size-per-page-splitter\" />\n        </>\n      )}\n      <Row>\n        <Col>\n          <Pagination\n            className=\"pagination-sm\"\n            style={{ flexWrap: 'wrap', justifyContent: 'center' }}\n          >\n            {pageNumbers.map((pageNumber) => (\n              <PaginationItem key={pageNumber} active={pageNumber === page}>\n                <PaginationLink\n                  onClick={() => onPageChange(pageNumber, sizePerPage)}\n                >\n                  {pageNumber}\n                </PaginationLink>\n              </PaginationItem>\n            ))}\n          </Pagination>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","export const RatingColors = [\n  'Black',\n  'Grey',\n  'Brown',\n  'Green',\n  'Cyan',\n  'Blue',\n  'Yellow',\n  'Orange',\n  'Red',\n] as const;\n\nexport type RatingColor = typeof RatingColors[number];\nexport const getRatingColor = (rating: number): RatingColor => {\n  const index = Math.min(Math.floor(rating / 400), RatingColors.length - 2);\n  return RatingColors[index + 1];\n};\nexport const getRatingColorCode = (ratingColor: RatingColor): string => {\n  switch (ratingColor) {\n    case 'Black':\n      return '#000000'; // black\n    case 'Grey':\n      return '#808080'; // grey\n    case 'Brown':\n      return '#804000'; // brown\n    case 'Green':\n      return '#008000'; // green\n    case 'Cyan':\n      return '#00C0C0'; // cyan\n    case 'Blue':\n      return '#0000FF'; // blue\n    case 'Yellow':\n      return '#C0C000'; // yellow\n    case 'Orange':\n      return '#FF8000'; // orange\n    case 'Red':\n      return '#FF0000'; // red\n  }\n};\n\nexport type RatingColorClassName =\n  | 'difficulty-black'\n  | 'difficulty-grey'\n  | 'difficulty-brown'\n  | 'difficulty-green'\n  | 'difficulty-cyan'\n  | 'difficulty-blue'\n  | 'difficulty-yellow'\n  | 'difficulty-orange'\n  | 'difficulty-red';\nexport const getRatingColorClass = (rating: number): RatingColorClassName => {\n  const ratingColor = getRatingColor(rating);\n  switch (ratingColor) {\n    case 'Black':\n      return 'difficulty-black';\n    case 'Grey':\n      return 'difficulty-grey';\n    case 'Brown':\n      return 'difficulty-brown';\n    case 'Green':\n      return 'difficulty-green';\n    case 'Cyan':\n      return 'difficulty-cyan';\n    case 'Blue':\n      return 'difficulty-blue';\n    case 'Yellow':\n      return 'difficulty-yellow';\n    case 'Orange':\n      return 'difficulty-orange';\n    case 'Red':\n      return 'difficulty-red';\n  }\n};\n","import React from 'react';\nimport { getRatingColorCode, RatingColor } from '../utils/RatingColor';\nimport './TopcoderLikeCircle.css';\n\ntype RatingMetalColor = 'Bronze' | 'Silver' | 'Gold';\nconst getRatingMetalColorCode = (metalColor: RatingMetalColor) => {\n  switch (metalColor) {\n    case 'Bronze':\n      return { base: '#965C2C', highlight: '#FFDABD' };\n    case 'Silver':\n      return { base: '#808080', highlight: 'white' };\n    case 'Gold':\n      return { base: '#FFD700', highlight: 'white' };\n  }\n};\n\ntype RatingColorWithMetal = RatingColor | RatingMetalColor;\nconst getStyleOptions = (color: RatingColorWithMetal, fillRatio: number) => {\n  if (color === 'Bronze' || color === 'Silver' || color === 'Gold') {\n    const metalColor = getRatingMetalColorCode(color);\n    return {\n      borderColor: metalColor.base,\n      background: `linear-gradient(to right, \\\n        ${metalColor.base}, ${metalColor.highlight}, ${metalColor.base})`,\n    };\n  } else {\n    const colorCode = getRatingColorCode(color);\n    return {\n      borderColor: colorCode,\n      background: `linear-gradient(to top, \\\n        ${colorCode} 0%, \\\n        ${colorCode} ${fillRatio * 100}%, \\\n        rgba(0,0,0,0) ${fillRatio * 100}%, \\\n        rgba(0,0,0,0) 100%)`,\n    };\n  }\n};\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n  color: RatingColorWithMetal;\n  rating: number;\n  big?: boolean;\n}\n\nexport const TopcoderLikeCircle: React.FC<Props> = (props) => {\n  const { color, rating } = props;\n  const fillRatio = rating >= 3200 ? 1.0 : (rating % 400) / 400;\n  const className = `topcoder-like-circle \\\n    ${props.big ? 'topcoder-like-circle-big' : ''}`;\n  const styleOptions = getStyleOptions(color, fillRatio);\n  return (\n    <span\n      className={`${className} ${props.className ?? ''}`}\n      id={props.id}\n      style={styleOptions}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { Badge, Tooltip } from 'reactstrap';\nimport { getRatingColor } from '../utils/RatingColor';\nimport { TopcoderLikeCircle } from './TopcoderLikeCircle';\nimport './RatingCircle.css';\n\ntype Rating = number;\n\ninterface Props {\n  id?: string;\n  rating?: Rating;\n}\n\nfunction getColor(rating: Rating) {\n  if (rating < 3200) {\n    return getRatingColor(rating);\n  } else if (rating < 3600) {\n    return 'Bronze';\n  } else if (rating < 4000) {\n    return 'Silver';\n  } else {\n    return 'Gold';\n  }\n}\n\nexport const RatingCircle: React.FC<Props> = (props) => {\n  const { id, rating } = props;\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const toggleTooltipState = (): void => setTooltipOpen(!tooltipOpen);\n  const circleId = `RatingCircle-${id ?? ''}`;\n  if (rating === undefined || rating < 0) {\n    return (\n      <span>\n        <Badge\n          className=\"rating-unavailable-circle\"\n          color=\"info\"\n          id={circleId}\n          pill\n        >\n          ?\n        </Badge>\n        <Tooltip\n          placement=\"top\"\n          target={circleId}\n          isOpen={tooltipOpen}\n          toggle={toggleTooltipState}\n        >\n          Rating is unavailable.\n        </Tooltip>\n      </span>\n    );\n  }\n  const color = getColor(rating);\n\n  return (\n    <>\n      <TopcoderLikeCircle\n        color={color}\n        rating={rating}\n        className=\"rating-circle\"\n        id={circleId}\n      />\n      <Tooltip\n        placement=\"top\"\n        target={circleId}\n        isOpen={tooltipOpen}\n        toggle={toggleTooltipState}\n      >\n        {`Rating: ${rating}`}\n      </Tooltip>\n    </>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable, {\n  ColumnDescription,\n  SortOrder,\n} from 'react-bootstrap-table-next';\nimport paginationFactory, {\n  PaginationProvider,\n} from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSort,\n  faSortDown,\n  faSortUp,\n  faChartLine,\n} from '@fortawesome/free-solid-svg-icons';\nimport { PaginationPanel } from '../../components/PaginationPanel';\nimport { getColor, RankingEntry } from '../../utils/Rating';\nimport { RatingCircle } from '../../components/RatingCircle';\nimport './ranking-table.scss';\nimport { UncontrolledTooltip } from 'reactstrap';\n\nconst _sortCaret = (order: 'asc' | 'desc' | undefined): JSX.Element => {\n  if (order === 'asc')\n    return (\n      <FontAwesomeIcon\n        style={{\n          marginLeft: '6px',\n          marginTop: '0.2rem',\n          marginBottom: '-0.2rem',\n        }}\n        icon={faSortUp}\n      />\n    );\n  if (order === 'desc')\n    return (\n      <FontAwesomeIcon\n        style={{\n          marginLeft: '6px',\n          marginTop: '-0.2rem',\n          marginBottom: '0.2rem',\n        }}\n        icon={faSortDown}\n      />\n    );\n  return <FontAwesomeIcon style={{ marginLeft: '6px' }} icon={faSort} />;\n};\n\ninterface Props {\n  ranking: RankingEntry[];\n}\n\nexport const RankingTable: React.FC<Props> = (props) => {\n  const { ranking } = props;\n\n  if (ranking.length === 0) {\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '500px',\n          textAlign: 'center',\n          marginTop: '100px',\n          marginBottom: '100px',\n        }}\n      >\n        Fetch data...\n      </div>\n    );\n  }\n\n  const columns: ColumnDescription[] = [\n    {\n      dataField: 'rank',\n      text: 'Rank',\n      sort: true,\n      classes: 'standings-rank',\n      headerClasses: 'standings-rank-head',\n      sortFunc: function _sortFunc(a: number, b: number, order: SortOrder) {\n        if (order === 'desc') {\n          return a - b;\n        } else {\n          return b - a;\n        }\n      },\n      sortCaret: _sortCaret,\n    },\n    {\n      dataField: 'username',\n      text: 'User',\n      sort: true,\n      classes: 'standings-username',\n      headerClasses: 'standings-username-head',\n      filter: textFilter(),\n      formatter: function _formatter(cell: string, _row: RankingEntry) {\n        const btnId = `ranking-user-btn-submission-${cell}`;\n        return (\n          <>\n            <a\n              href={`https://atcoder.jp/users/${cell}`}\n              className=\"username\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              style={{ color: getColor(_row.rating)[1] }}\n            >\n              <RatingCircle id={cell} rating={_row.rating} />{' '}\n              <span className=\"user\">{cell}</span>\n            </a>\n            <span className=\"ranking-user-btn\">\n              <Link to={`/rating/${cell}`} id={btnId}>\n                <FontAwesomeIcon icon={faChartLine} />\n              </Link>\n              <UncontrolledTooltip placement=\"top\" target={btnId}>\n                {`view ${cell}'s rating history`}\n              </UncontrolledTooltip>\n            </span>\n          </>\n        );\n      },\n      sortFunc: function _sortFunc(a: string, b: string, order: SortOrder) {\n        if (order === 'desc') {\n          return a > b ? 1 : -1;\n        } else {\n          return b < a ? -1 : 1;\n        }\n      },\n      sortCaret: _sortCaret,\n    },\n    {\n      dataField: 'rating',\n      text: 'Rating',\n      sort: true,\n      classes: 'standings-rating',\n      headerClasses: 'standings-rating-head',\n      formatter: function _formatter(cell: number) {\n        return (\n          <>\n            <span style={{ color: getColor(cell)[1] }}>{cell}</span>\n          </>\n        );\n      },\n      sortFunc: function _sortFunc(_a: number, _b: number, order: SortOrder) {\n        if (order === 'desc') {\n          return _b - _a;\n        } else {\n          return _a - _b;\n        }\n      },\n      sortCaret: _sortCaret,\n    },\n    {\n      dataField: 'match',\n      text: 'Match',\n      sort: true,\n      classes: 'standings-match',\n      headerClasses: 'standings-match-head',\n      formatter: function _formatter(cell: number) {\n        return (\n          <>\n            <span>{cell}</span>\n          </>\n        );\n      },\n      sortFunc: function _sortFunc(_a: number, _b: number, order: SortOrder) {\n        if (order === 'desc') {\n          return _b - _a;\n        } else {\n          return _a - _b;\n        }\n      },\n      sortCaret: _sortCaret,\n    },\n    {\n      dataField: 'win',\n      text: 'Win',\n      sort: true,\n      classes: 'standings-win',\n      headerClasses: 'standings-win-head',\n      formatter: function _formatter(cell: number) {\n        return (\n          <>\n            <span>{cell}</span>\n          </>\n        );\n      },\n      sortFunc: function _sortFunc(_a: number, _b: number, order: SortOrder) {\n        if (order === 'desc') {\n          return _b - _a;\n        } else {\n          return _a - _b;\n        }\n      },\n      sortCaret: _sortCaret,\n    },\n  ];\n\n  return (\n    <>\n      <PaginationProvider\n        pagination={paginationFactory({\n          custom: true,\n          sizePerPage: 100,\n          sizePerPageList: [10, 20, 50, 100, 1000],\n          totalSize: ranking.length,\n        })}\n      >\n        {({ paginationProps, paginationTableProps }) => {\n          paginationTableProps.keyField = 'user_name';\n          paginationTableProps.data = ranking;\n          paginationTableProps.columns = columns;\n          return (\n            <div>\n              <PaginationPanel renderSizePerPage={true} {...paginationProps} />\n              <BootstrapTable\n                bootstrap4\n                classes=\"th-center th-middle td-center td-middle table-standings\"\n                striped\n                // keyField=\"user_name\"\n                // data={userStandingsEntries}\n                // columns={columns}\n                filter={filterFactory()}\n                wrapperClasses=\"table-responsive\"\n                {...paginationTableProps}\n              />\n              <PaginationPanel renderSizePerPage={false} {...paginationProps} />\n            </div>\n          );\n        }}\n      </PaginationProvider>\n      <hr />\n    </>\n  );\n};\n","import React from 'react';\nimport useSWR from 'swr';\nimport { Alert } from 'reactstrap';\nimport { Contest } from '../../interfaces/Contest';\nimport {\n  ContestResults,\n  fetchContestResults,\n  fetchContests,\n} from '../../utils/Data';\nimport { RankingEntry, RatingRanks } from '../../utils/Rating';\nimport { RankingTable } from './RankingTable';\n\nexport const RankingPage: React.FC = () => {\n  const { data: contests, error: contestsError } = useSWR<Contest[], Error>(\n    '/json/contests/contests',\n    fetchContests\n  );\n  const { data: contestResultsArray, error: contestResultsArrayError } = useSWR<\n    (ContestResults | undefined)[],\n    Error\n  >(contests ? `/json/results/` : null, () => {\n    if (!contests) return Promise.resolve([undefined]);\n    const promises = contests.map((contest) =>\n      fetchContestResults(contest.slug)\n    );\n    return Promise.all(promises);\n  });\n\n  const ratingRanks = new RatingRanks(contestResultsArray);\n  // {rank, rating, username}[]\n  const ranking: RankingEntry[] = ratingRanks.getRanking();\n\n  return (\n    <>\n      <h2>Description</h2>\n      <p>AtCoder で行われたマラソンコンテストの総合ランキングを表示します．</p>\n      <p>\n        AtCoder\n        が公式にマラソンレートの総合ランキング表示機能を実装するまでのつなぎです．\n      </p>\n      <hr />\n\n      {contestsError ? (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          Failed to fetch contest list.\n        </Alert>\n      ) : contests === undefined ? (\n        <div\n          style={{\n            width: '100%',\n            height: '500px',\n            textAlign: 'center',\n            marginTop: '100px',\n            marginBottom: '100px',\n          }}\n        >\n          Fetch contest data...\n        </div>\n      ) : contestResultsArrayError ? (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          Failed to fetch contest results.\n        </Alert>\n      ) : contestResultsArray === undefined ? (\n        <div\n          style={{\n            width: '100%',\n            height: '500px',\n            textAlign: 'center',\n            marginTop: '100px',\n            marginBottom: '100px',\n          }}\n        >\n          Fetch contest results...\n        </div>\n      ) : (\n        <></>\n      )}\n      <RankingTable ranking={ranking} />\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport { SWRConfig } from 'swr';\nimport { NavigationBar } from './components/NavigationBar';\n// import logo from './logo.svg';\nimport './App.css';\nimport { RatingPage } from './pages/rating';\nimport { RankingPage } from './pages/ranking';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <SWRConfig value={{ revalidateOnFocus: false }}>\n        <Router>\n          <NavigationBar />\n          <Container\n            style={{ width: '100%', maxWidth: '90%', marginTop: '80px' }}\n          >\n            <Switch>\n              <Route\n                exact\n                path=\"/rating/:user\"\n                component={RatingPage as React.FC}\n              />\n              <Route exact path=\"/rating/\" component={RatingPage as React.FC} />\n              <Route exact path=\"/ranking/\" component={RankingPage} />\n              <Redirect path=\"/\" to=\"/rating/\" />\n            </Switch>\n          </Container>\n          <footer\n            className=\"footer\"\n            style={{\n              marginTop: '30px',\n              padding: '30px',\n              backgroundColor: '#efefef',\n            }}\n          >\n            <div className=\"container\">\n              連絡先:{' '}\n              <a\n                href=\"https://twitter.com/iiljj\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                si (@iiljj) / Twitter\n              </a>\n              {', '}\n              <a\n                href=\"https://github.com/iilj\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                iilj (iilj) / GitHub\n              </a>\n            </div>\n          </footer>\n        </Router>\n      </SWRConfig>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}