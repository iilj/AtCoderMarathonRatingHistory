{"version":3,"sources":["components/NavigationBar.tsx","pages/rating/FormBlock.tsx","utils/index.ts","utils/Rating.ts","pages/rating/UserInfoTable.tsx","utils/Shape.ts","pages/rating/ChartCanvas.ts","pages/rating/StatusCanvas.ts","pages/rating/RatingGraph.tsx","utils/Data.ts","pages/rating/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavigationBar","Navbar","color","light","expand","fixed","NavbarBrand","tag","Link","to","FormBlock","props","paramUser","useState","user","setUser","ratingPagePath","useMemo","generatePath","history","useHistory","Row","Col","sm","FormGroup","style","width","Label","for","Input","value","type","name","id","placeholder","onChange","e","target","onKeyPress","key","push","Button","NavLink","block","display","marginTop","getOrdinal","x","s","v","formatDate","d","year","String","getFullYear","month","getMonth","slice","date","getDate","COLORS","getColor","i","length","RatingRanks","contestResultsArray","user2rating","ratings","this","Map","undefined","forEach","contestResults","username","has","set","Math","max","get","NewRating","Array","from","values","sort","a","b","rating","UserInfoTable","ratingHistory","ratingRanks","lastResult","lastCompeted","Date","EndTime","rank","getRank","ratingColor","fontSize","className","newGraphics","parent","PIXI","addChild","newText","y","font","t","fontFamily","fill","anchor","MARGIN_VAL_X","OFFSET_X","PANEL_WIDTH","PANEL_HEIGHT","MONTH_NAMES","getPer","l","r","ChartCanvas","app","chartContainer","x_min","x_max","y_min","y_max","labelTextStyle","R","destroy","children","texture","baseTexture","statusCanvas","stage","ratingHistoryEntry","min","initBackground","initChart","panelGraphics","alpha","borderGraphics","y1","y2","beginFill","drawRect","endFill","newLabelY","newLabelX","OFFSET_Y","lineStyle","moveTo","lineTo","month_step","isFirst","isEnded","j","unix","parse","drawRoundedRect","statusGraphics","chartGraphics","dropShadowFilter","DropShadowFilter","distance","hypot","angle","atan2","blur","filters","lineGraphics","highestGraphics","interactive","mouseoverVertex","vertexGraphics","scale","mouseoutVertex","highestIdx","reduce","index","argmax","maxRating","map","vertex","drawCircle","on","dx","HIGHEST_WIDTH","HIGHEST_HEIGHT","highest_text","LABEL_FONT_FAMILY","RATING_FONT_FAMILY","STATUS_WIDTH","STATUS_HEIGHT","Particle","statusContainer","object","speed","velocityX","velocityY","rotateSpeed","life","initialX","initialY","useStar","random","PI","cos","sin","visible","text","rotation","Particles","particles","num","particle","disable","update","StatusCanvas","ratingText","placeText","diffText","dateText","contestNameText","standingsUrl","ticker","maxFPS","add","animate","cursor","window","location","href","data","particle_flag","old_rating","OldRating","place","Place","contest_name","ContestName","tmp","clear","abs","toLocaleDateString","particleNum","floor","pow","pre","getRatingPer","StandingsUrl","RatingGraph","isFontListLoaded","useFontFaceObserver","family","statusCanvasRef","useRef","chartCanvasRef","canvases","setCanvases","tweetTitle","setTweetTitle","useEffect","current","chartCanvas","_statusApp","height","view","antialias","_chartApp","renderer","backgroundColor","_statusCanvas","_chartCanvas","lastHistory","init","_tweetTitle","margin","maxWidth","maxHeight","ref","textAlign","TwitterShareButton","url","title","TwitterIcon","size","round","UncontrolledTooltip","placement","replaceAll","CONTESTS","fetchContests","fetch","process","catch","Error","then","json","Promise","resolve","CONTEST_RESULTS_MAP","fetchContestResults","contest","startsWith","submissions","RatingPage","match","params","useSWR","contests","contestsError","error","promises","slug","all","contestResultsArrayError","filter","contestResult","Alert","marginBottom","marginLeft","marginRight","App","revalidateOnFocus","Container","exact","path","component","padding","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a8a8126.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, NavbarBrand } from 'reactstrap';\n\nexport const NavigationBar: React.FC = () => {\n  return (\n    <Navbar color=\"light\" light expand=\"md\" fixed=\"top\">\n      <NavbarBrand tag={Link} to={'/'}>\n        AtCoder Marathon Rating History\n      </NavbarBrand>\n    </Navbar>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Button, Input, Row, FormGroup, Label, Col } from 'reactstrap';\n\ninterface Props {\n  paramUser: string;\n}\n\nconst generatePath = (user: string): string => `/rating/${user}`;\n\nexport const FormBlock: React.FC<Props> = (props) => {\n  const { paramUser } = props;\n  const [user, setUser] = useState(paramUser);\n  const ratingPagePath = useMemo(() => generatePath(user), [user]);\n  const history = useHistory();\n\n  return (\n    <>\n      <Row>\n        <Col sm={12}>\n          <FormGroup style={{ width: '100%' }}>\n            <Label for=\"input-user\">ATCODER ID:</Label>\n            <Input\n              value={user}\n              type=\"text\"\n              name=\"input-user\"\n              id=\"input-user\"\n              placeholder={user ? user : 'eivour'}\n              onChange={(e): void => setUser(e.target.value)}\n              onKeyPress={(e): void => {\n                if (e.key === 'Enter') {\n                  history.push(ratingPagePath);\n                }\n              }}\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={12}>\n          <Button\n            color=\"primary\"\n            tag={NavLink}\n            to={ratingPagePath}\n            block\n            style={{ display: 'block', marginTop: '0.5rem' }}\n          >\n            Go\n          </Button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","/**\n * 順位の数値から順位文字列に変換する\n * @param x 順位\n * @returns 順位文字列\n */\nexport const getOrdinal = (x: number): string => {\n  const s = ['th', 'st', 'nd', 'rd'];\n  const v = x % 100;\n  return `${x}${s[(v - 20) % 10] || s[v] || s[0]}`;\n};\n\nexport const formatDate = (d: Date): string => {\n  const year = String(d.getFullYear());\n  const month = `0${d.getMonth() + 1}`.slice(-2);\n  const date = `0${d.getDate()}`.slice(-2);\n  return `${year}/${month}/${date}`;\n};\n","import { ContestResults } from './Data';\n\nexport const STEP_SIZE = 400;\nexport const COLORS: [number, string, number, number][] = [\n  [0, '#808080', 0.15, 0x808080],\n  [400, '#804000', 0.15, 0x804000],\n  [800, '#008000', 0.15, 0x008000],\n  [1200, '#00C0C0', 0.2, 0x00c0c0],\n  [1600, '#0000FF', 0.1, 0x0000ff],\n  [2000, '#C0C000', 0.25, 0xc0c000],\n  [2400, '#FF8000', 0.2, 0xff8000],\n  [2800, '#FF0000', 0.1, 0xff0000],\n];\n\n/**\n * レーティング x に関する色情報を返す\n * @param x レーティング\n * @returns [レーティング下限値，色文字列，アルファ値，色数値]\n */\nexport const getColor = (x: number): [number, string, number, number] => {\n  for (let i = COLORS.length - 1; i >= 0; i--) {\n    if (x >= COLORS[i][0]) return COLORS[i];\n  }\n  return [-1, '#000000', 0.1, 0x000000];\n};\n\n/**\n * 同色レーティング帯のうち何割の位置にいるかを求める\n * @param x レーティング値\n * @returns 割合\n */\nexport const getRatingPer = (x: number): number => {\n  let pre = COLORS[COLORS.length - 1][0] + STEP_SIZE;\n  for (let i = COLORS.length - 1; i >= 0; i--) {\n    if (x >= COLORS[i][0]) return (x - COLORS[i][0]) / (pre - COLORS[i][0]);\n    pre = COLORS[i][0];\n  }\n  return 0;\n};\n\nexport class RatingRanks {\n  user2rating: Map<string, number>;\n  ratings: number[];\n\n  constructor(contestResultsArray?: (ContestResults | undefined)[]) {\n    this.user2rating = new Map<string, number>();\n    if (contestResultsArray === undefined) {\n      this.ratings = [];\n      return;\n    }\n    contestResultsArray.forEach((contestResults) => {\n      if (contestResults === undefined) return;\n      for (const username in contestResults) {\n        if (this.user2rating.has(username)) {\n          this.user2rating.set(\n            username,\n            Math.max(\n              this.user2rating.get(username) as number,\n              contestResults[username].NewRating\n            )\n          );\n        } else {\n          this.user2rating.set(username, contestResults[username].NewRating);\n        }\n      }\n    });\n    this.ratings = Array.from(this.user2rating.values());\n    this.ratings.sort((a, b) => b - a);\n  }\n\n  getRank(username: string): number {\n    const rating = this.user2rating.get(username);\n    if (rating === undefined) return -1;\n    for (let i = 0; i < this.ratings.length; ++i) {\n      if (this.ratings[i] === rating) return i + 1;\n    }\n    return -1;\n  }\n}\n","import React from 'react';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport { formatDate, getOrdinal } from '../../utils';\nimport { getColor, RatingRanks } from '../../utils/Rating';\n\ninterface Props {\n  paramUser: string;\n  ratingHistory: RatingHistoryEntry[];\n  ratingRanks: RatingRanks;\n}\n\nexport const UserInfoTable: React.FC<Props> = (props) => {\n  const { paramUser, ratingHistory, ratingRanks } = props;\n  if (ratingHistory.length === 0) {\n    return <></>;\n  }\n  const lastResult = ratingHistory[ratingHistory.length - 1];\n  const lastCompeted = new Date(lastResult.EndTime * 1000);\n  const rank = ratingRanks.getRank(paramUser);\n  const ratingColor = getColor(lastResult.NewRating)[1];\n\n  return (\n    <>\n      <h3 style={{ fontSize: '24px' }}>Contest Status</h3>\n      <hr />\n      <table className=\"dl-table\" style={{ fontSize: '14px' }}>\n        <tr>\n          <th className=\"no-break\">Name</th>\n          <td>{paramUser}</td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Rank</th>\n          <td>{getOrdinal(rank)}</td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Rating</th>\n          <td>\n            <span style={{ color: ratingColor }}>{lastResult.NewRating}</span>\n          </td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Rated Matches</th>\n          <td>{ratingHistory.length}</td>\n        </tr>\n        <tr>\n          <th className=\"no-break\">Last Competed</th>\n          <td>{formatDate(lastCompeted)}</td>\n        </tr>\n      </table>\n    </>\n  );\n};\n","import * as PIXI from 'pixi.js';\n\nexport const newGraphics = (\n  parent: PIXI.Graphics | PIXI.Container\n): PIXI.Graphics => {\n  const s = new PIXI.Graphics();\n  parent.addChild(s);\n  return s;\n};\n\nexport const newText = (\n  parent: PIXI.Container,\n  x: number,\n  y: number,\n  font: string,\n  fontSize: number\n): PIXI.Text => {\n  const t = new PIXI.Text(\n    '',\n    new PIXI.TextStyle({\n      fontFamily: font,\n      fontSize: fontSize,\n      fill: 0x000000,\n    })\n  );\n  t.x = x;\n  t.y = y;\n  t.anchor.x = 0.5;\n  t.anchor.y = 0.5;\n  parent.addChild(t);\n  return t;\n};\n","import * as PIXI from 'pixi.js';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { StatusCanvas } from './StatusCanvas';\nimport { newGraphics } from '../../utils/Shape';\nimport { COLORS, STEP_SIZE, getColor } from '../../utils/Rating';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\n\nconst MARGIN_VAL_X = 86400 * 30;\nconst MARGIN_VAL_Y_LOW = 100;\nconst MARGIN_VAL_Y_HIGH = 300;\nconst OFFSET_X = 50;\nconst OFFSET_Y = 5;\nconst PANEL_WIDTH = 640 - OFFSET_X - 10;\nconst PANEL_HEIGHT = 360 - OFFSET_Y - 30;\nconst HIGHEST_WIDTH = 80;\nconst HIGHEST_HEIGHT = 20;\nconst START_YEAR = 2010;\nconst MONTH_NAMES = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\nconst YEAR_SEC = 86400 * 365;\n\n// additional\nconst LABEL_FONT_FAMILY = 'Lato';\n\nconst getPer = (x: number, l: number, r: number): number => {\n  return (x - l) / (r - l);\n};\n\nexport class ChartCanvas {\n  app: PIXI.Application;\n  chartContainer?: PIXI.Container;\n  x_min!: number;\n  x_max!: number;\n  y_min!: number;\n  y_max!: number;\n  labelTextStyle!: PIXI.TextStyle;\n  R!: number;\n\n  constructor(app: PIXI.Application) {\n    this.app = app;\n    this.chartContainer = undefined;\n    // void this.init();\n  }\n\n  destroy(): void {\n    if (this.chartContainer) {\n      this.chartContainer.destroy({\n        children: true,\n        texture: true,\n        baseTexture: true,\n      });\n      this.chartContainer = undefined;\n    }\n  }\n\n  init(ratingHistory: RatingHistoryEntry[], statusCanvas: StatusCanvas): void {\n    this.destroy();\n    this.chartContainer = new PIXI.Container();\n    void this.app.stage.addChild(this.chartContainer);\n\n    this.R = 1.0;\n\n    this.x_min = 100000000000;\n    this.x_max = 0;\n    this.y_min = 10000;\n    this.y_max = 0;\n    ratingHistory.forEach((ratingHistoryEntry) => {\n      this.x_min = Math.min(this.x_min, ratingHistoryEntry.EndTime);\n      this.x_max = Math.max(this.x_max, ratingHistoryEntry.EndTime);\n      this.y_min = Math.min(this.y_min, ratingHistoryEntry.NewRating);\n      this.y_max = Math.max(this.y_max, ratingHistoryEntry.NewRating);\n    });\n    this.x_min -= MARGIN_VAL_X;\n    this.x_max += MARGIN_VAL_X;\n    this.y_min = Math.min(1500, Math.max(0, this.y_min - MARGIN_VAL_Y_LOW));\n    this.y_max += MARGIN_VAL_Y_HIGH;\n\n    this.labelTextStyle = new PIXI.TextStyle({\n      fontFamily: LABEL_FONT_FAMILY,\n      fontSize: 12 * this.R,\n      fill: 0x000000,\n    });\n\n    void this.initBackground();\n    void this.initChart(ratingHistory, statusCanvas);\n  }\n\n  initBackground(): void {\n    if (this.chartContainer === undefined) return;\n\n    const panelGraphics = new PIXI.Graphics();\n    panelGraphics.x = OFFSET_X * this.R;\n    panelGraphics.y = OFFSET_Y * this.R;\n    panelGraphics.alpha = 0.3;\n    const borderGraphics = new PIXI.Graphics();\n    borderGraphics.x = OFFSET_X * this.R;\n    borderGraphics.y = OFFSET_Y * this.R;\n\n    void this.chartContainer.addChild(panelGraphics);\n    void this.chartContainer.addChild(borderGraphics);\n\n    // 背景色を塗る\n    let y1 = 0;\n    for (let i = COLORS.length - 1; i >= 0; i--) {\n      const y2 =\n        PANEL_HEIGHT -\n        PANEL_HEIGHT * getPer(COLORS[i][0], this.y_min, this.y_max);\n      if (y2 > 0 && y1 < PANEL_HEIGHT) {\n        y1 = Math.max(y1, 0);\n        panelGraphics\n          .beginFill(COLORS[i][3])\n          .drawRect(\n            0,\n            y1 * this.R,\n            PANEL_WIDTH * this.R,\n            (Math.min(y2, PANEL_HEIGHT) - y1) * this.R\n          )\n          .endFill();\n      }\n      y1 = y2;\n    }\n\n    const newLabelY = (s: string, y: number): PIXI.Text => {\n      const t = new PIXI.Text(s, this.labelTextStyle);\n      t.x = (OFFSET_X - 10) * this.R;\n      t.y = (OFFSET_Y + y) * this.R;\n      t.anchor.x = 1.0;\n      t.anchor.y = 0.5;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    const newLabelX = (s: string, x: number, y: number): PIXI.Text => {\n      const t = new PIXI.Text(s, this.labelTextStyle);\n      t.x = (OFFSET_X + x) * this.R;\n      t.y = (OFFSET_Y + PANEL_HEIGHT + 2 + y) * this.R;\n      t.anchor.x = 0.5;\n      t.anchor.y = 0.0;\n      if (this.chartContainer === undefined) return t;\n      return this.chartContainer.addChild(t);\n    };\n\n    // y 軸ラベルとグリッド線を追加する\n    for (let i = 0; i <= this.y_max; i += STEP_SIZE) {\n      if (i >= this.y_min) {\n        const y =\n          PANEL_HEIGHT - PANEL_HEIGHT * getPer(i, this.y_min, this.y_max);\n        void newLabelY(String(i), y);\n        borderGraphics.lineStyle(1.0 * this.R, 0xffffff);\n        if (i === 2000) borderGraphics.lineStyle(1.0 * this.R, 0x000000);\n        borderGraphics\n          .moveTo(0, y * this.R)\n          .lineTo(PANEL_WIDTH * this.R, y * this.R);\n      }\n    }\n    borderGraphics.lineStyle(1.0 * this.R, 0xffffff);\n\n    // x 軸ラベルとグリッド線を追加する\n    let month_step = 6;\n    for (let i = 3; i >= 1; i--) {\n      if (this.x_max - this.x_min <= YEAR_SEC * i + MARGIN_VAL_X * 2)\n        month_step = i;\n    }\n    let isFirst = true;\n    for (let i = START_YEAR; i < 3000; i++) {\n      let isEnded = false;\n      for (let j = 0; j < 12; j += month_step) {\n        const month = `0${j + 1}`.slice(-2);\n        const unix = Date.parse(`${i}-${month}-01T00:00:00`) / 1000;\n        if (this.x_min < unix && unix < this.x_max) {\n          const x = PANEL_WIDTH * getPer(unix, this.x_min, this.x_max);\n          if (j === 0 || isFirst) {\n            void newLabelX(MONTH_NAMES[j], x, 0);\n            void newLabelX(String(i), x, 13);\n            isFirst = false;\n          } else {\n            void newLabelX(MONTH_NAMES[j], x, 0);\n          }\n          borderGraphics\n            .moveTo(x * this.R, 0)\n            .lineTo(x * this.R, PANEL_HEIGHT * this.R);\n        }\n        if (unix > this.x_max) {\n          isEnded = true;\n          break;\n        }\n      }\n      if (isEnded) break;\n    }\n    borderGraphics\n      .lineStyle(1.5 * this.R, 0x888888)\n      .drawRoundedRect(\n        0,\n        0,\n        PANEL_WIDTH * this.R,\n        PANEL_HEIGHT * this.R,\n        2 * this.R\n      );\n  }\n\n  initChart(\n    ratingHistory: RatingHistoryEntry[],\n    statusGraphics: StatusCanvas\n  ): void {\n    if (this.chartContainer === undefined) return;\n\n    const chartGraphics = new PIXI.Graphics();\n    this.chartContainer.addChild(chartGraphics);\n    // chart_container.shadow = new cj.Shadow(\"rgba(0,0,0,0.3)\", 1, 2, 3);\n    const dropShadowFilter = new DropShadowFilter();\n    dropShadowFilter.color = 0x000000;\n    dropShadowFilter.alpha = 0.3;\n    dropShadowFilter.distance = Math.hypot(1, 2) * this.R;\n    dropShadowFilter.angle = Math.atan2(1, 2);\n    dropShadowFilter.blur = 3 * this.R;\n    chartGraphics.filters = [dropShadowFilter];\n\n    const lineGraphics = newGraphics(chartGraphics);\n    const highestGraphics = newGraphics(chartGraphics);\n    highestGraphics.interactive = true;\n\n    const mouseoverVertex = (i: number): void => {\n      vertexGraphics[i].scale.x = vertexGraphics[i].scale.y = 1.2;\n      statusGraphics.set(ratingHistory[i], true);\n    };\n\n    const mouseoutVertex = (i: number): void => {\n      vertexGraphics[i].scale.x = vertexGraphics[i].scale.y = 1;\n    };\n    const { argmax: highestIdx } = ratingHistory.reduce(\n      ({ argmax, maxRating }, ratingHistoryEntry, index) => {\n        if (ratingHistoryEntry.NewRating > maxRating) {\n          argmax = index;\n          maxRating = ratingHistoryEntry.NewRating;\n        }\n        return { argmax, maxRating };\n      },\n      { argmax: 0, maxRating: 0 }\n    );\n\n    const vertexGraphics = ratingHistory.map((ratingHistoryEntry, index) => {\n      const vertex = newGraphics(chartGraphics);\n      vertex.lineStyle(1.0 * this.R, 0xffffff);\n      if (index === highestIdx) vertex.lineStyle(1.0 * this.R, 0x000000);\n      vertex\n        .beginFill(getColor(ratingHistoryEntry.NewRating)[3])\n        .drawCircle(0, 0, 3.5 * this.R);\n      vertex.x =\n        (OFFSET_X +\n          PANEL_WIDTH *\n            getPer(ratingHistoryEntry.EndTime, this.x_min, this.x_max)) *\n        this.R;\n      vertex.y =\n        (OFFSET_Y +\n          (PANEL_HEIGHT -\n            PANEL_HEIGHT *\n              getPer(ratingHistoryEntry.NewRating, this.y_min, this.y_max))) *\n        this.R;\n      vertex.interactive = true;\n      vertex.on('mouseover', () => {\n        mouseoverVertex(index);\n      });\n      vertex.on('mouseout', () => {\n        mouseoutVertex(index);\n      });\n      return vertex;\n    });\n    {\n      let dx = 80 * this.R;\n      if ((this.x_min + this.x_max) / 2 < ratingHistory[highestIdx].EndTime)\n        dx = -80 * this.R;\n      const x = vertexGraphics[highestIdx].x + dx;\n      const y = vertexGraphics[highestIdx].y - 16;\n      highestGraphics\n        .lineStyle(1.0 * this.R, 0xffffff)\n        .moveTo(vertexGraphics[highestIdx].x, vertexGraphics[highestIdx].y)\n        .lineTo(x, y);\n      highestGraphics\n        .lineStyle(1.0 * this.R, 0x888888)\n        .beginFill(0xffffff)\n        .drawRoundedRect(\n          x - (HIGHEST_WIDTH / 2) * this.R,\n          y - (HIGHEST_HEIGHT / 2) * this.R,\n          HIGHEST_WIDTH * this.R,\n          HIGHEST_HEIGHT * this.R,\n          2 * this.R\n        );\n      const highest_text = new PIXI.Text(\n        `Highest: ${ratingHistory[highestIdx].NewRating}`,\n        this.labelTextStyle\n      );\n      highest_text.x = x;\n      highest_text.y = y;\n      highest_text.anchor.x = 0.5;\n      highest_text.anchor.y = 0.5;\n      this.chartContainer.addChild(highest_text);\n\n      highestGraphics.on('mouseover', () => {\n        mouseoverVertex(highestIdx);\n      });\n      highestGraphics.on('mouseout', () => {\n        mouseoutVertex(highestIdx);\n      });\n    }\n    // 折れ線を描画\n    (\n      [\n        [2.0, 0xaaaaaa],\n        [1.0, 0xffffff],\n      ] as [number, number][]\n    ).forEach(([width, color]) => {\n      lineGraphics.lineStyle(width * this.R, color);\n      lineGraphics.moveTo(vertexGraphics[0].x, vertexGraphics[0].y);\n      vertexGraphics.forEach((vertex) => {\n        lineGraphics.lineTo(vertex.x, vertex.y);\n      });\n    });\n  }\n}\n","import * as PIXI from 'pixi.js';\nimport { newGraphics, newText } from '../../utils/Shape';\nimport { getColor, getRatingPer } from '../../utils/Rating';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport { getOrdinal } from '../../utils';\n\nexport const LABEL_FONT_FAMILY = 'Lato';\nexport const RATING_FONT_FAMILY = 'Squada One';\n\nconst OFFSET_X = 50;\nconst OFFSET_Y = 5;\nconst STATUS_WIDTH = 640 - OFFSET_X - 10;\nconst STATUS_HEIGHT = 80 - OFFSET_Y - 5;\n\nconst STAR_MIN = 3200;\nconst PARTICLE_MIN = 3;\nconst PARTICLE_MAX = 20;\nconst LIFE_MAX = 30;\n\n/**\n * 増減値を文字列に変換する\n * @param x 増減値\n * @returns 増減値を表す文字列\n */\nconst getDiff = (x: number): string => {\n  const sign = x === 0 ? '±' : x < 0 ? '-' : '+';\n  return `${sign}${Math.abs(x)}`;\n};\n\nclass Particle {\n  object: PIXI.Text;\n  angle: number;\n  speed: number;\n  velocityX: number;\n  velocityY: number;\n  rotateSpeed: number;\n  life: number;\n  initialX: number;\n  initialY: number;\n\n  constructor(statusContainer: PIXI.Container, x: number, y: number) {\n    this.initialX = x;\n    this.initialY = y;\n    this.object = newText(statusContainer, 0, 0, LABEL_FONT_FAMILY, 64);\n    this.angle = 0;\n    this.speed = 0;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.rotateSpeed = 0;\n    this.life = 0;\n    this.object.x = this.initialX;\n    this.object.y = this.initialY;\n  }\n\n  set(color: number, alpha: number, useStar: boolean) {\n    this.object.x = this.initialX;\n    this.object.y = this.initialY;\n    this.angle = Math.random() * Math.PI * 2;\n    this.speed = Math.random() * 4 + 4;\n    this.velocityX = Math.cos(this.angle) * this.speed;\n    this.velocityY = Math.sin(this.angle) * this.speed;\n    this.rotateSpeed = Math.random() * 20 + 10;\n    this.life = LIFE_MAX;\n    this.object.visible = true;\n    this.object.style.fill = color;\n    this.object.text = useStar ? '★' : '@';\n    this.object.alpha = alpha;\n  }\n\n  disable() {\n    this.life = 0;\n    this.object.visible = false;\n  }\n\n  update() {\n    if (this.life <= 0) {\n      this.object.visible = false;\n      return;\n    }\n    this.object.x += this.velocityX;\n    this.velocityX *= 0.9;\n    this.object.y += this.velocityY;\n    this.velocityY *= 0.9;\n    this.life--;\n    this.object.scale.x = this.object.scale.y = this.life / LIFE_MAX;\n    this.object.rotation += this.rotateSpeed;\n  }\n}\n\nclass Particles {\n  particles: Particle[];\n\n  constructor(statusContainer: PIXI.Container, x: number, y: number) {\n    this.particles = [];\n    for (let i = 0; i < PARTICLE_MAX; ++i) {\n      this.particles.push(new Particle(statusContainer, x, y));\n    }\n  }\n\n  set(num: number, color: number, alpha: number, rating: number) {\n    const useStar = rating >= STAR_MIN;\n    this.particles.forEach((particle, index) => {\n      if (index < num) {\n        particle.set(color, alpha, useStar);\n      } else {\n        particle.disable();\n      }\n    });\n  }\n\n  update() {\n    this.particles.forEach((particle) => {\n      if (particle.life > 0) {\n        particle.update();\n      }\n    });\n  }\n}\n\nexport class StatusCanvas {\n  app: PIXI.Application;\n  statusContainer?: PIXI.Container;\n  borderGraphics!: PIXI.Graphics;\n  ratingText!: PIXI.Text;\n  placeText!: PIXI.Text;\n  diffText!: PIXI.Text;\n  dateText!: PIXI.Text;\n  contestNameText!: PIXI.Text;\n\n  particles?: Particles;\n  standingsUrl: string;\n\n  constructor(app: PIXI.Application) {\n    this.app = app;\n    this.statusContainer = undefined;\n    this.standingsUrl = '';\n\n    this.app.ticker.maxFPS = 60;\n    this.app.ticker.add(() => {\n      this.animate();\n    });\n  }\n\n  destroy(): void {\n    if (this.statusContainer) {\n      this.statusContainer.destroy({\n        children: true,\n        texture: true,\n        baseTexture: true,\n      });\n      this.statusContainer = undefined;\n    }\n  }\n\n  init(): void {\n    this.destroy();\n    this.statusContainer = new PIXI.Container();\n    void this.app.stage.addChild(this.statusContainer);\n\n    this.borderGraphics = newGraphics(this.statusContainer);\n    this.ratingText = newText(\n      this.statusContainer,\n      OFFSET_X + 75,\n      OFFSET_Y + STATUS_HEIGHT / 2,\n      RATING_FONT_FAMILY,\n      48\n    );\n    this.placeText = newText(\n      this.statusContainer,\n      OFFSET_X + 160,\n      OFFSET_Y + STATUS_HEIGHT / 2.7,\n      LABEL_FONT_FAMILY,\n      16\n    );\n    this.diffText = newText(\n      this.statusContainer,\n      OFFSET_X + 160,\n      OFFSET_Y + STATUS_HEIGHT / 1.5,\n      LABEL_FONT_FAMILY,\n      11\n    );\n    this.diffText.style.fill = 0x888888;\n    this.dateText = newText(\n      this.statusContainer,\n      OFFSET_X + 200,\n      OFFSET_Y + STATUS_HEIGHT / 4,\n      LABEL_FONT_FAMILY,\n      14\n    );\n    this.contestNameText = newText(\n      this.statusContainer,\n      OFFSET_X + 200,\n      OFFSET_Y + STATUS_HEIGHT / 1.6,\n      LABEL_FONT_FAMILY,\n      20\n    );\n    this.dateText.anchor.x = 0.0;\n    this.contestNameText.anchor.x = 0.0;\n    if (this.contestNameText.width > STATUS_WIDTH - 200 - 10) {\n      this.contestNameText.scale.x =\n        (STATUS_WIDTH - 200 - 10) / this.contestNameText.width;\n    }\n\n    this.contestNameText.interactive = true;\n    this.contestNameText.cursor = 'pointer';\n    this.contestNameText.on('click', () => {\n      window.location.href = this.standingsUrl;\n    });\n\n    this.particles = new Particles(\n      this.statusContainer,\n      this.ratingText.x,\n      this.ratingText.y\n    );\n  }\n\n  set(data: RatingHistoryEntry, particle_flag: boolean): void {\n    if (!this.particles) return;\n    const date = new Date(data.EndTime * 1000);\n    const rating = data.NewRating,\n      old_rating = data.OldRating;\n    const place = data.Place;\n    const contest_name = data.ContestName;\n    const tmp = getColor(rating);\n    const color = tmp[3],\n      alpha = tmp[2];\n    this.borderGraphics\n      .clear()\n      .lineStyle(1.0, color)\n      .drawRoundedRect(OFFSET_X, OFFSET_Y, STATUS_WIDTH, STATUS_HEIGHT, 2);\n    this.ratingText.text = String(rating);\n    this.ratingText.style.fill = color;\n    this.placeText.text = getOrdinal(place);\n    this.diffText.text = getDiff(rating - old_rating);\n    this.dateText.text = date.toLocaleDateString();\n    this.contestNameText.text = contest_name;\n    this.contestNameText.scale.x = 1.0;\n    if (this.contestNameText.width > STATUS_WIDTH - 200 - 10) {\n      this.contestNameText.scale.x =\n        (STATUS_WIDTH - 200 - 10) / this.contestNameText.width;\n    }\n    if (particle_flag) {\n      const particleNum = Math.floor(\n        Math.pow(getRatingPer(rating), 2) * (PARTICLE_MAX - PARTICLE_MIN) +\n          PARTICLE_MIN\n      );\n      this.particles.set(particleNum, color, alpha, rating);\n    }\n    this.standingsUrl = data.StandingsUrl;\n  }\n\n  animate(): void {\n    if (!this.particles) return;\n    this.particles.update();\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport useFontFaceObserver from 'use-font-face-observer';\nimport * as PIXI from 'pixi.js';\nimport { TwitterIcon, TwitterShareButton } from 'react-share';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport { ChartCanvas } from './ChartCanvas';\nimport {\n  StatusCanvas,\n  LABEL_FONT_FAMILY,\n  RATING_FONT_FAMILY,\n} from './StatusCanvas';\nimport { getOrdinal } from '../../utils';\nimport { UncontrolledTooltip } from 'reactstrap';\n\ninterface Props {\n  ratingHistory?: RatingHistoryEntry[];\n  paramUser: string;\n}\n\nexport const RatingGraph: React.FC<Props> = (props) => {\n  const { paramUser, ratingHistory } = props;\n  const isFontListLoaded = useFontFaceObserver([\n    { family: RATING_FONT_FAMILY },\n    { family: LABEL_FONT_FAMILY },\n  ]);\n  const statusCanvasRef = useRef<HTMLCanvasElement | null>(null);\n  const chartCanvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [canvases, setCanvases] = useState<[StatusCanvas, ChartCanvas]>();\n  const [tweetTitle, setTweetTitle] = useState('');\n\n  const R = 1.0;\n  useEffect(() => {\n    const statusCanvas: HTMLCanvasElement | null = statusCanvasRef.current;\n    const chartCanvas: HTMLCanvasElement | null = chartCanvasRef.current;\n    if (statusCanvas === null || chartCanvas === null) return;\n\n    const _statusApp = new PIXI.Application({\n      width: 640,\n      height: 80,\n      view: statusCanvas,\n      antialias: true,\n    });\n    const _chartApp = new PIXI.Application({\n      width: 640 * R,\n      height: 360 * R,\n      view: chartCanvas,\n      antialias: true,\n    });\n\n    _statusApp.renderer.backgroundColor = 0xffffff;\n    _chartApp.renderer.backgroundColor = 0xffffff;\n\n    const _statusCanvas = new StatusCanvas(_statusApp);\n    const _chartCanvas = new ChartCanvas(_chartApp);\n\n    // _statusCanvas.init();\n    setCanvases([_statusCanvas, _chartCanvas]);\n  }, []);\n\n  useEffect(() => {\n    if (!isFontListLoaded) return;\n    if (!ratingHistory) return;\n    if (!canvases) return;\n\n    const [statusCanvas, chartCanvas] = canvases;\n    if (ratingHistory.length === 0) {\n      chartCanvas.destroy();\n      statusCanvas.destroy();\n      return;\n    }\n    const lastHistory = ratingHistory[ratingHistory.length - 1];\n\n    statusCanvas.init();\n    chartCanvas.init(ratingHistory, statusCanvas);\n    statusCanvas.set(lastHistory, false);\n  }, [isFontListLoaded, ratingHistory, canvases]);\n\n  useEffect(() => {\n    if (!ratingHistory) return;\n    const lastHistory = ratingHistory[ratingHistory.length - 1];\n    const rank = lastHistory.Place;\n    const _tweetTitle =\n      `${paramUser} took ${getOrdinal(rank)} place in ${\n        lastHistory.ContestName\n      }!\\n` + `AtCoder Marathon Rating History`;\n    setTweetTitle(_tweetTitle);\n  }, [paramUser, ratingHistory]);\n\n  return (\n    <>\n      <div style={{ marginTop: '20px' }}>\n        <div>\n          <canvas\n            style={{\n              margin: '0px auto',\n              maxWidth: '640px',\n              maxHeight: '80px',\n              height: '100%',\n              width: '100%',\n              display: 'block',\n            }}\n            ref={statusCanvasRef}\n            width=\"640\"\n            height=\"80\"\n          ></canvas>\n        </div>\n        <div>\n          <canvas\n            style={{\n              margin: '0px auto',\n              maxWidth: '640px',\n              maxHeight: '360px',\n              height: '100%',\n              width: '100%',\n              display: 'block',\n            }}\n            ref={chartCanvasRef}\n            width=\"640\"\n            height=\"360\"\n          ></canvas>\n        </div>\n      </div>\n      <div style={{ textAlign: 'center' }}>\n        <TwitterShareButton\n          url={window.location.href}\n          title={tweetTitle}\n          id=\"chart-share-button\"\n        >\n          <TwitterIcon size={40} round />\n        </TwitterShareButton>\n        <UncontrolledTooltip placement=\"top\" target=\"chart-share-button\">\n          {(tweetTitle + ' ' + window.location.href).replaceAll('\\n', ' ')}\n        </UncontrolledTooltip>\n      </div>\n    </>\n  );\n};\n","import { Contest } from '../interfaces/Contest';\nimport { RatingHistoryEntry } from '../interfaces/RatingHistoryEntry';\n\nlet CONTESTS: Contest[] | undefined = undefined;\nexport const fetchContests = async (): Promise<Contest[]> =>\n  CONTESTS === undefined\n    ? fetch(`${process.env.PUBLIC_URL}/json/contests/contests.json`)\n        .catch((e) => {\n          throw Error(e);\n        })\n        .then(async (r) => {\n          CONTESTS = (await r.json()) as Contest[];\n          return CONTESTS;\n        })\n    : Promise.resolve(CONTESTS);\n\nexport type ContestResults = { [key: string]: RatingHistoryEntry };\nconst CONTEST_RESULTS_MAP: Map<string, ContestResults> = new Map<\n  string,\n  ContestResults\n>();\nexport const fetchContestResults = async (\n  contest?: string\n): Promise<ContestResults | undefined> =>\n  contest !== undefined && contest.length > 0 && contest.startsWith('ahc')\n    ? !CONTEST_RESULTS_MAP.has(contest)\n      ? fetch(`${process.env.PUBLIC_URL}/json/results/${contest}.json`)\n          .catch((e) => {\n            throw Error(e);\n          })\n          .then(async (r) => {\n            const submissions = (await r.json()) as ContestResults;\n            CONTEST_RESULTS_MAP.set(contest, submissions);\n            return submissions;\n          })\n      : Promise.resolve(CONTEST_RESULTS_MAP.get(contest) as ContestResults)\n    : Promise.resolve(undefined);\n","import React from 'react';\nimport useSWR from 'swr';\nimport { Alert } from 'reactstrap';\nimport { FormBlock } from './FormBlock';\nimport { UserInfoTable } from './UserInfoTable';\nimport { RatingGraph } from './RatingGraph';\nimport { Contest } from '../../interfaces/Contest';\nimport { RatingHistoryEntry } from '../../interfaces/RatingHistoryEntry';\nimport {\n  ContestResults,\n  fetchContestResults,\n  fetchContests,\n} from '../../utils/Data';\nimport { RatingRanks } from '../../utils/Rating';\n\ninterface Props {\n  match: {\n    params: {\n      user: string;\n    };\n  };\n}\n\nexport const RatingPage: React.FC<Props> = (props) => {\n  const paramUser: string = props.match.params.user ?? '';\n\n  const { data: contests, error: contestsError } = useSWR<Contest[], Error>(\n    '/json/contests/contests',\n    fetchContests\n  );\n  const { data: contestResultsArray, error: contestResultsArrayError } = useSWR<\n    (ContestResults | undefined)[],\n    Error\n  >(contests ? `/json/results/` : null, () => {\n    if (!contests) return Promise.resolve([undefined]);\n    const promises = contests.map((contest) =>\n      fetchContestResults(contest.slug)\n    );\n    return Promise.all(promises);\n  });\n\n  const ratingHistory =\n    paramUser && contestResultsArray\n      ? (contestResultsArray\n          .map((contestResults) => {\n            if (contestResults && paramUser in contestResults)\n              return contestResults[paramUser];\n            else return undefined;\n          })\n          .filter(\n            (contestResult) => contestResult !== undefined\n          ) as RatingHistoryEntry[])\n      : undefined;\n  const ratingRanks = new RatingRanks(contestResultsArray);\n\n  return (\n    <>\n      <h2>Description</h2>\n      <p>\n        AtCoder\n        で行われたマラソンコンテストのレーティング推移をグラフに表示します．\n      </p>\n      <p>\n        AtCoder\n        が公式にマラソンレートのグラフ表示機能を実装するまでのつなぎです．\n      </p>\n      <hr />\n\n      {contestsError ? (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          Failed to fetch contest list.\n        </Alert>\n      ) : contests === undefined ? (\n        <div\n          style={{\n            width: '100%',\n            height: '500px',\n            textAlign: 'center',\n            marginTop: '100px',\n            marginBottom: '100px',\n          }}\n        >\n          Fetch contest data...\n        </div>\n      ) : contestResultsArrayError ? (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          Failed to fetch contest results.\n        </Alert>\n      ) : contestResultsArray === undefined ? (\n        <div\n          style={{\n            width: '100%',\n            height: '500px',\n            textAlign: 'center',\n            marginTop: '100px',\n            marginBottom: '100px',\n          }}\n        >\n          Fetch contest results...\n        </div>\n      ) : (\n        <></>\n      )}\n      <FormBlock paramUser={paramUser} />\n      <hr />\n      {ratingHistory?.length ? (\n        <div\n          style={{ maxWidth: '640px', marginLeft: 'auto', marginRight: 'auto' }}\n        >\n          <UserInfoTable\n            paramUser={paramUser}\n            ratingHistory={ratingHistory}\n            ratingRanks={ratingRanks}\n          />\n          <RatingGraph paramUser={paramUser} ratingHistory={ratingHistory} />\n        </div>\n      ) : (\n        <Alert\n          color=\"danger\"\n          style={{\n            marginTop: '50px',\n            marginBottom: '50px',\n          }}\n        >\n          AtCoder ID is empty or invalid.\n        </Alert>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport { SWRConfig } from 'swr';\nimport { NavigationBar } from './components/NavigationBar';\n// import logo from './logo.svg';\nimport './App.css';\nimport { RatingPage } from './pages/rating';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <SWRConfig value={{ revalidateOnFocus: false }}>\n        <Router>\n          <NavigationBar />\n          <Container\n            style={{ width: '100%', maxWidth: '90%', marginTop: '80px' }}\n          >\n            <Switch>\n              <Route\n                exact\n                path=\"/rating/:user\"\n                component={RatingPage as React.FC}\n              />\n              <Route exact path=\"/rating/\" component={RatingPage as React.FC} />\n              <Redirect path=\"/\" to=\"/rating/\" />\n            </Switch>\n          </Container>\n          <footer\n            className=\"footer\"\n            style={{\n              marginTop: '30px',\n              padding: '30px',\n              backgroundColor: '#efefef',\n            }}\n          >\n            <div className=\"container\">\n              連絡先:{' '}\n              <a\n                href=\"https://twitter.com/iiljj\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                si (@iiljj) / Twitter\n              </a>\n              {', '}\n              <a\n                href=\"https://github.com/iilj\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                iilj (iilj) / GitHub\n              </a>\n            </div>\n          </footer>\n        </Router>\n      </SWRConfig>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}